.nav__btn,.nav__link{color:#fff}.nav__button-mobile{display:none}.header__hamburger-line{background:#fff!important}.switch-lang-arrow::after{content:"";background:url(../img/hero/openlanglisticon.svg)}.nav.active .open .switch-lang-arrow::after,.open .switch-lang-arrow::after{background:url(../img/hero/closelanglisticon.svg)}.promo{position:relative;background:url(../img/hero/promo-bg.png) center top/cover no-repeat;padding-top:230px;height:100vh}.promo__title{font:800 100px "Manrope";color:#fff;margin-bottom:20px}.promo__text{text-align:center;font-size:32px}.promo__subtitle{color:#fff}.promo__arrow{display:block;margin:30px auto 0}.process{padding:115px 0 60px}.process__items{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.process__video{max-width:450px}.process__video video{width:100%}.process__video img,.process__video video{height:100%;-o-object-fit:cover;object-fit:cover}.process__text{max-width:480px;margin-left:30px;font-size:18px;line-height:1.6;font-weight:500}.process__text .green-text{color:#026839;font-weight:800}.about{padding:60px 0}.about__title{text-align:center;font-size:36px;font-weight:700;margin-bottom:30px}.about__subtitle{margin:0 auto;max-width:500px;text-align:center;font-size:18px;line-height:1.4;color:#464646}.about__items{margin-top:100px}.about__item{margin-bottom:200px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-pack:distribute;justify-content:space-around;-ms-flex-wrap:wrap;flex-wrap:wrap}.about__item:nth-child(2){-webkit-box-orient:horizontal;-webkit-box-direction:reverse;-ms-flex-direction:row-reverse;flex-direction:row-reverse}.about__item:last-child{margin-bottom:0}.about__text{width:35%}.about__text-title{font-size:36px;font-weight:500}.about__text-desc{margin:24px 0 30px;font-size:18px;line-height:160%}.about__link{color:#007947;font-size:16px;cursor:pointer;padding:8px 24px;border:1px solid #026839;border-radius:5px;display:inline-block}.gallery{padding:200px 0 60px}.gallery .swiper{width:100%;height:100%}.gallery .swiper-wrapper{height:435px!important}.gallery .swiper-top-slider{padding-top:40px}.gallery .swiper-bottom-slider{padding-bottom:20px}.gallery .swiper-slide{height:420px!important;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.gallery .swiper-slide img{display:block;width:100%;height:100%;-o-object-fit:cover;object-fit:cover}.gallery .swiper-scrollbar{background:0 0}.gallery .swiper-scrollbar-drag{background:#464646;height:2px}.gallery .swiper-top-scrollbar{top:0;bottom:0;left:0}@supports (-webkit-appearance:none){.switch-lang-arrow::after{background:url(../img/hero/openlanglisticon.svg)}.nav.active .open .switch-lang-arrow::after,.open .switch-lang-arrow::after{background:url(../img/hero/closelanglisticon.svg)}.promo{background:url(../img/hero/promo-bg.webp) center top/cover no-repeat}}@media (max-width:1300px){.gallery{padding:70px 0 60px}.gallery .swiper-slide{height:100%!important}}@media (max-width:1199.98px){.gallery .swiper-wrapper{height:333px!important}}@media (max-width:991.98px){.about__text{width:45%}.about__text-title{font-size:32px}.about__text-desc{font-size:17px}.about__img{width:45%}.process{padding:40px 0 60px}.process__items{-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-orient:vertical;-webkit-box-direction:reverse;-ms-flex-direction:column-reverse;flex-direction:column-reverse}.process__video{margin-top:40px;width:100%;max-width:unset}.process__video video{height:400px;border-radius:5px}.process__text{width:83%;margin:0 auto;text-align:left;max-width:unset}}@media (max-width:767.98px){.promo__title{font-size:86px}.nav__button{display:none}.nav__button-mobile{display:block;margin-top:30px}.nav__button-mobile .nav__btn{color:#3a3a3c;font-size:20px}.about__img{width:40%}.about__text{margin-left:25px;width:50%}}@media (max-width:650px){.about__item{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;margin-bottom:80px}.about__img{width:60%}.about__text{text-align:center;margin-left:0;margin-top:36px;width:75%}.about__text-title{font-size:28px}.process__video video{height:250px}}@media (max-width:577px){.nav__links{width:100%}.promo__text{padding-top:40px}.promo__title{font-size:68px}}@media (max-width:483px){.promo__title{font-size:56px}.promo__subtitle{font-size:26px}.process__video video{height:180px}}@media (max-width:360px){.promo__title{font-size:42px}.promo__subtitle{font-size:20px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb21vLm1pbi5jc3MiLCJwcm9tby5zY3NzIiwicHJvbW8uY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLFMsQ0NFRSxVLENDREYsVSxDQUdBLG1CLENGQ0UsWSxDRUdGLHVCLENGQ0UseUIsQ0FHRix5QixDRUNBLFUsQ0RVRSxnRCxDQU1GLDJDLENEWkEsK0IsQ0NhRSxpRCxDRFJGLE0sQ0VDQSxpQixDRFlFLG1FLENBQ0UsaUIsQ0FDQSxZLENEUkosYSxDRUNBLHdCLENEYUUsVSxDQUNFLGtCLENBSUYsWSxDQUNFLGlCLENDWkosYyxDRkdBLGdCLENFQ0EsVSxDRkdBLGEsQ0VDQSxhLENEZ0JFLGtCLENEWkYsUSxDQ2NJLG9CLENEVkosZSxDQUNFLG1CLENBQ0EsbUIsQ0VMRixZLENEaUJFLHlCLENBQ0Usc0IsQ0NmSixtQixDRGlCSSx1QixDQUNFLG9CLENBQ0Esc0IsQ0NkTixlLENEa0JJLGUsQ0RQSixxQixDRVBBLFUsQ0ZjQSxtQixDQVBBLHFCLENFQUEsVyxDRG9CSSxtQixDQUNFLGdCLENEUk4sYyxDQ2NBLGUsQ0FDRSxnQixDQ3BCRixjLENEc0JFLGUsQ0FDRSxlLENEVkosMEIsQ0VQQSxhLENEdUJFLGUsQ0RYRixNLENDZUksYyxDQ25CSixhLENEd0JFLGlCLENBQ0UsYyxDQ3RCSixlLENEeUJFLGtCLENEYkYsZ0IsQ0NlSSxhLENBQ0EsZSxDRGJGLGlCLENBQ0EsYyxDQ2FFLGUsQ0RYRixhLENFWEYsYSxDRHlCSSxnQixDRFBKLFksQ0FDRSxtQixDRWhCRixtQixDRDBCSSxtQixDQUNFLFksQ0N4Qk4sd0IsQ0Q0QkUscUIsQ0FDRSxrQixDQzFCSix3QixDRDJCSSw0QixDQUNFLGtCLENBQ0EsYyxDRE5OLHlCLENDV00sNkIsQ0FDQSw2QixDQzFCTiw4QixDRDhCRSwwQixDRFRGLHVCLENDYUksZSxDRFRKLFksQ0VoQkEsUyxDRm9CQSxrQixDRWhCQSxjLENEK0JFLGUsQ0MzQkYsaUIsQ0QrQkksa0IsQ0FDRSxjLENDN0JOLGdCLENBR0EsWSxDRGlDSSxhLENBQ0UsYyxDQy9CTixjLENEa0NJLGdCLENBQ0Usd0IsQ0FDQSxpQixDQUFBLG9CLENEWk4sUSxDQUNFLG9CLENBR0YsZ0IsQ0V0QkEsVSxDRGtDTSxXLENEUE4sd0IsQ0NXUSxzQixDQUlKLDJCLENBQ0UsZ0IsQ0RSTiw4QixDQ2FNLG1CLENEVE4sc0IsQ0NjTSxzQixDQUNBLG1CLENDcENOLG1CLENGeUJFLFksQ0NnQkYsd0IsQ0FDRSxxQixDRGRBLGtCLENFdkJBLHVCLENEeUNJLG9CLENEZkosc0IsQ0NzQkYsMEIsQ0FHTSxhLENEcEJKLFUsQ0V2QkEsVyxDQUNGLG1CLENEaURBLGdCLENEckJBLDBCLENDeUJNLGMsQ0RyQk4sK0IsQ0FDRSxrQixDRXZCQSxVLENGMkJGLDhCLENDNkJFLEssQ0QzQkEsUSxDRXZCQSxNLENGMkJGLFdDMEJNLHVCLEVEekJKLHlCLENDMEJJLGdELENBR0YsMkMsQ0NyREYsK0IsQ0RzREksaUQsQ0NqREosTSxDRHFESSxzRSxBRHBCTiwwQkFDRSxRLENDMkJJLG1CLENDbkRKLHNCLENBQ0YsdUIsQUZvQ0EsNkJBQ0Usd0IsQ0NrQ0ksd0IsQUR6Qk4sNEJDdUNJLFksQ0FDRSxTLENDL0ROLGtCLENEcUVBLGMsQ0RyQ0UsaUIsQ0FDRSxjLENFNUJGLFcsQ0R1RUUsUyxDQUlBLFEsQ0FDRSxtQixDRHJDSixlLENFOUJBLGtCLENEd0VJLGMsQ0FDRSwyQixDQ3RFTiw2QixDRDZFSSxpQyxDQUNFLDZCLENBTVIsZSxDQUVJLGUsQ0FDRSxVLENDL0VKLGUsQ0FHQSxxQixDRG9GRSxZLENBQ0UsaUIsQ0FLTixjLENBRUksUyxDQUNFLGEsQ0NyRkosZSxDRHdGRSxpQixBRGhESiw0QkFDRSxhLENFOUJBLGMsQ0FHQSxZLENBQ0YsWSxDQUdBLG1CLENBQ0EsYSxDQUNBLGUsQ0ZrQ0UsNkIsQ0U5QkYsYSxDRmdDSSxjLENFNUJKLFcsQ0ZnQ0ksUyxDRTVCSixZLENGZ0NJLGdCLENFOUJKLFcsQUFRQSx5QkZnQ0UsWSxDRTlCRiwyQixDRmdDSSw0QixDRTlCSCx5QixDRmdDRyxxQixDRTlCSixrQixDRmtDRSxXLENFOUJGLFMsQ0ZrQ0UsWSxDRTlCRixpQixDRmdDSSxhLENFOUJKLGUsQ0ZnQ0ksUyxDRTVCSCxrQixDRmdDRyxjLENFNUJKLHFCLENGZ0NJLGMsQUFRSix5QkU5QkEsVyxDRmdDSSxVLENFNUJKLFksQ0ZnQ0ksZ0IsQ0U1QkosYSxDRmdDSSxnQixBQVFKLHlCQUNFLGEsQ0FDRSxjLENBR0YsZ0IsQ0FDRSxjLENBR0YscUIsQ0FDRSxjLEFBUUoseUJBQ0UsYSxDQUNFLGMsQ0FHRixnQixDQUNFLGdCIiwiZmlsZSI6InByb21vLm1pbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubmF2X19saW5rLFxuLm5hdl9fYnRuIHtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5uYXZfX2J1dHRvbi1tb2JpbGUge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4uaGVhZGVyX19oYW1idXJnZXItbGluZSB7XG4gIGJhY2tncm91bmQ6ICNmZmYgIWltcG9ydGFudDtcbn1cblxuLnN3aXRjaC1sYW5nLWFycm93OjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIGJhY2tncm91bmQ6IHVybChcIi4uL2ltZy9oZXJvL29wZW5sYW5nbGlzdGljb24uc3ZnXCIpO1xufVxuXG4ub3BlbiAuc3dpdGNoLWxhbmctYXJyb3c6OmFmdGVyLFxuLm5hdi5hY3RpdmUgLm9wZW4gLnN3aXRjaC1sYW5nLWFycm93OjphZnRlciB7XG4gIGJhY2tncm91bmQ6IHVybChcIi4uL2ltZy9oZXJvL2Nsb3NlbGFuZ2xpc3RpY29uLnN2Z1wiKTtcbn1cblxuLnByb21vIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWcvaGVyby9wcm9tby1iZy5wbmdcIikgY2VudGVyIHRvcC9jb3ZlciBuby1yZXBlYXQ7XG4gIHBhZGRpbmctdG9wOiAyMzBweDtcbiAgaGVpZ2h0OiAxMDB2aDtcbn1cblxuLnByb21vX190aXRsZSB7XG4gIGZvbnQ6IDgwMCAxMDBweCBcIk1hbnJvcGVcIjtcbiAgY29sb3I6ICNmZmY7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbi5wcm9tb19fdGV4dCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAzMnB4O1xufVxuXG4ucHJvbW9fX3N1YnRpdGxlIHtcbiAgY29sb3I6ICNmZmY7XG59XG5cbi5wcm9tb19fYXJyb3cge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAzMHB4IGF1dG8gMCBhdXRvO1xufVxuXG4ucHJvY2VzcyB7XG4gIHBhZGRpbmc6IDExNXB4IDAgNjBweCAwO1xufVxuXG4ucHJvY2Vzc19faXRlbXMge1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LWFsaWduOiBzdHJldGNoO1xuICAtbXMtZmxleC1hbGlnbjogc3RyZXRjaDtcbiAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XG4gIC13ZWJraXQtYm94LXBhY2s6IGNlbnRlcjtcbiAgLW1zLWZsZXgtcGFjazogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbn1cblxuLnByb2Nlc3NfX3ZpZGVvIHtcbiAgbWF4LXdpZHRoOiA0NTBweDtcbn1cblxuLnByb2Nlc3NfX3ZpZGVvIHZpZGVvIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgLW8tb2JqZWN0LWZpdDogY292ZXI7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xufVxuXG4ucHJvY2Vzc19fdmlkZW8gaW1nIHtcbiAgaGVpZ2h0OiAxMDAlO1xuICAtby1vYmplY3QtZml0OiBjb3ZlcjtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG59XG5cbi5wcm9jZXNzX190ZXh0IHtcbiAgbWF4LXdpZHRoOiA0ODBweDtcbiAgbWFyZ2luLWxlZnQ6IDMwcHg7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgbGluZS1oZWlnaHQ6IDEuNjtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cblxuLnByb2Nlc3NfX3RleHQgLmdyZWVuLXRleHQge1xuICBjb2xvcjogIzAyNjgzOTtcbiAgZm9udC13ZWlnaHQ6IDgwMDtcbn1cblxuLmFib3V0IHtcbiAgcGFkZGluZzogNjBweCAwO1xufVxuXG4uYWJvdXRfX3RpdGxlIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDM2cHg7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XG59XG5cbi5hYm91dF9fc3VidGl0bGUge1xuICBtYXJnaW46IDAgYXV0bztcbiAgbWF4LXdpZHRoOiA1MDBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDE4cHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjQ7XG4gIGNvbG9yOiAjNDY0NjQ2O1xufVxuXG4uYWJvdXRfX2l0ZW1zIHtcbiAgbWFyZ2luLXRvcDogMTAwcHg7XG59XG5cbi5hYm91dF9faXRlbSB7XG4gIG1hcmdpbi1ib3R0b206IDIwMHB4O1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIC1tcy1mbGV4LXBhY2s6IGRpc3RyaWJ1dGU7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICAtbXMtZmxleC13cmFwOiB3cmFwO1xuICBmbGV4LXdyYXA6IHdyYXA7XG59XG5cbi5hYm91dF9faXRlbTpudGgtY2hpbGQoMikge1xuICAtd2Via2l0LWJveC1vcmllbnQ6IGhvcml6b250YWw7XG4gIC13ZWJraXQtYm94LWRpcmVjdGlvbjogcmV2ZXJzZTtcbiAgLW1zLWZsZXgtZGlyZWN0aW9uOiByb3ctcmV2ZXJzZTtcbiAgZmxleC1kaXJlY3Rpb246IHJvdy1yZXZlcnNlO1xufVxuXG4uYWJvdXRfX2l0ZW06bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbi5hYm91dF9fdGV4dCB7XG4gIHdpZHRoOiAzNSU7XG59XG5cbi5hYm91dF9fdGV4dC10aXRsZSB7XG4gIGZvbnQtc2l6ZTogMzZweDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cblxuLmFib3V0X190ZXh0LWRlc2Mge1xuICBtYXJnaW46IDI0cHggMCAzMHB4IDA7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgbGluZS1oZWlnaHQ6IDE2MCU7XG59XG5cbi5hYm91dF9fbGluayB7XG4gIGNvbG9yOiAjMDA3OTQ3O1xuICBmb250LXNpemU6IDE2cHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgcGFkZGluZzogOHB4IDI0cHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMwMjY4Mzk7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4uZ2FsbGVyeSB7XG4gIHBhZGRpbmc6IDIwMHB4IDAgNjBweCAwO1xufVxuXG4uZ2FsbGVyeSAuc3dpcGVyIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLmdhbGxlcnkgLnN3aXBlci13cmFwcGVyIHtcbiAgaGVpZ2h0OiA0MzVweCAhaW1wb3J0YW50O1xufVxuXG4uZ2FsbGVyeSAuc3dpcGVyLXRvcC1zbGlkZXIge1xuICBwYWRkaW5nLXRvcDogNDBweDtcbn1cblxuLmdhbGxlcnkgLnN3aXBlci1ib3R0b20tc2xpZGVyIHtcbiAgcGFkZGluZy1ib3R0b206IDIwcHg7XG59XG5cbi5nYWxsZXJ5IC5zd2lwZXItc2xpZGUge1xuICBoZWlnaHQ6IDQyMHB4ICFpbXBvcnRhbnQ7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgLXdlYmtpdC1ib3gtcGFjazogY2VudGVyO1xuICAtbXMtZmxleC1wYWNrOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuXG4uZ2FsbGVyeSAuc3dpcGVyLXNsaWRlIGltZyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICAtby1vYmplY3QtZml0OiBjb3ZlcjtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG59XG5cbi5nYWxsZXJ5IC5zd2lwZXItc2Nyb2xsYmFyIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG59XG5cbi5nYWxsZXJ5IC5zd2lwZXItc2Nyb2xsYmFyLWRyYWcge1xuICBiYWNrZ3JvdW5kOiAjNDY0NjQ2O1xuICBoZWlnaHQ6IDJweDtcbn1cblxuLmdhbGxlcnkgLnN3aXBlci10b3Atc2Nyb2xsYmFyIHtcbiAgdG9wOiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG59XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpIHtcbiAgLnN3aXRjaC1sYW5nLWFycm93OjphZnRlciB7XG4gICAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1nL2hlcm8vb3BlbmxhbmdsaXN0aWNvbi5zdmdcIik7XG4gIH1cblxuICAub3BlbiAuc3dpdGNoLWxhbmctYXJyb3c6OmFmdGVyLFxuICAubmF2LmFjdGl2ZSAub3BlbiAuc3dpdGNoLWxhbmctYXJyb3c6OmFmdGVyIHtcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWcvaGVyby9jbG9zZWxhbmdsaXN0aWNvbi5zdmdcIik7XG4gIH1cblxuICAucHJvbW8ge1xuICAgIGJhY2tncm91bmQ6IHVybChcIi4uL2ltZy9oZXJvL3Byb21vLWJnLndlYnBcIikgY2VudGVyIHRvcC9jb3ZlciBuby1yZXBlYXQ7XG4gIH1cbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEzMDBweCkge1xuICAuZ2FsbGVyeSB7XG4gICAgcGFkZGluZzogNzBweCAwIDYwcHggMDtcbiAgfVxuXG4gIC5nYWxsZXJ5IC5zd2lwZXItc2xpZGUge1xuICAgIGhlaWdodDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpIHtcblxufVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMTE5OS45OHB4KSB7XG4gIC5nYWxsZXJ5IC5zd2lwZXItd3JhcHBlciB7XG4gICAgaGVpZ2h0OiAzMzNweCAhaW1wb3J0YW50O1xuICB9XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpIHtcblxufVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTkxLjk4cHgpIHtcbiAgLmFib3V0X190ZXh0IHtcbiAgICB3aWR0aDogNDUlO1xuICB9XG5cbiAgLmFib3V0X190ZXh0LXRpdGxlIHtcbiAgICBmb250LXNpemU6IDMycHg7XG4gIH1cblxuICAuYWJvdXRfX3RleHQtZGVzYyB7XG4gICAgZm9udC1zaXplOiAxN3B4O1xuICB9XG5cbiAgLmFib3V0X19pbWcge1xuICAgIHdpZHRoOiA0NSU7XG4gIH1cblxuICAucHJvY2VzcyB7XG4gICAgcGFkZGluZzogNDBweCAwIDYwcHggMDtcbiAgfVxuXG4gIC5wcm9jZXNzX19pdGVtcyB7XG4gICAgLW1zLWZsZXgtd3JhcDogd3JhcDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcbiAgICAtd2Via2l0LWJveC1kaXJlY3Rpb246IHJldmVyc2U7XG4gICAgLW1zLWZsZXgtZGlyZWN0aW9uOiBjb2x1bW4tcmV2ZXJzZTtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uLXJldmVyc2U7XG4gIH1cblxuICAucHJvY2Vzc19fdmlkZW8ge1xuICAgIG1hcmdpbi10b3A6IDQwcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiB1bnNldDtcbiAgfVxuXG4gIC5wcm9jZXNzX192aWRlbyB2aWRlbyB7XG4gICAgaGVpZ2h0OiA0MDBweDtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIH1cblxuICAucHJvY2Vzc19fdGV4dCB7XG4gICAgd2lkdGg6IDgzJTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIG1heC13aWR0aDogdW5zZXQ7XG4gIH1cblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSkge1xuXG59XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA3NjcuOThweCkge1xuICAucHJvbW9fX3RpdGxlIHtcbiAgICBmb250LXNpemU6IDg2cHg7XG4gIH1cblxuICAubmF2X19idXR0b24ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cblxuICAubmF2X19idXR0b24tbW9iaWxlIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xuICB9XG5cbiAgLm5hdl9fYnV0dG9uLW1vYmlsZSAubmF2X19idG4ge1xuICAgIGNvbG9yOiAjM0EzQTNDO1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgfVxuXG4gIC5hYm91dF9faW1nIHtcbiAgICB3aWR0aDogNDAlO1xuICB9XG5cbiAgLmFib3V0X190ZXh0IHtcbiAgICBtYXJnaW4tbGVmdDogMjVweDtcbiAgICB3aWR0aDogNTAlO1xuICB9XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpIHtcblxufVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNjUwcHgpIHtcbiAgLmFib3V0X19pdGVtIHtcbiAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuICAgIC13ZWJraXQtYm94LWRpcmVjdGlvbjogbm9ybWFsO1xuICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgbWFyZ2luLWJvdHRvbTogODBweDtcbiAgfVxuXG4gIC5hYm91dF9faW1nIHtcbiAgICB3aWR0aDogNjAlO1xuICB9XG5cbiAgLmFib3V0X190ZXh0IHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgbWFyZ2luLXRvcDogMzZweDtcbiAgICB3aWR0aDogNzUlO1xuICB9XG5cbiAgLmFib3V0X190ZXh0LXRpdGxlIHtcbiAgICBmb250LXNpemU6IDI4cHg7XG4gIH1cblxuICAucHJvY2Vzc19fdmlkZW8gdmlkZW8ge1xuICAgIGhlaWdodDogMjUwcHg7XG4gIH1cblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSkge1xuXG59XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOiA1NzdweCkge1xuICAubmF2X19saW5rcyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuICAucHJvbW9fX3RleHQge1xuICAgIHBhZGRpbmctdG9wOiA0MHB4O1xuICB9XG5cbiAgLnByb21vX190aXRsZSB7XG4gICAgZm9udC1zaXplOiA2OHB4O1xuICB9XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpIHtcblxufVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNDgzcHgpIHtcbiAgLnByb21vX190aXRsZSB7XG4gICAgZm9udC1zaXplOiA1NnB4O1xuICB9XG5cbiAgLnByb21vX19zdWJ0aXRsZSB7XG4gICAgZm9udC1zaXplOiAyNnB4O1xuICB9XG5cbiAgLnByb2Nlc3NfX3ZpZGVvIHZpZGVvIHtcbiAgICBoZWlnaHQ6IDE4MHB4O1xuICB9XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpIHtcblxufVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogMzYwcHgpIHtcbiAgLnByb21vX190aXRsZSB7XG4gICAgZm9udC1zaXplOiA0MnB4O1xuICB9XG5cbiAgLnByb21vX19zdWJ0aXRsZSB7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICB9XG5cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpIHtcblxufVxufVxyXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbkJ5YjIxdkxuTmpjM01pTENKd2NtOXRieTVqYzNNaUxDSmlZWE5sTDE5MllYSnBZV0pzWlhNdWMyTnpjeUpkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVUZIUlR0RlFVVkZMRmRCUVVFN1FVTklTanRCUkUxRk8wVkJRMFVzWVVGQlFUdEJRMHBLT3p0QlJGRkJPMFZCUTBVc01rSkJRVUU3UVVOTVJqczdRVVJWU1R0RlFVTkZMRmRCUVVFN1JVRkRRU3h0UkVGQlFUdEJRMUJPTzBGRVZVVTdSVUZGUlN4dlJFRkJRVHRCUTFSS096dEJSR0ZCTzBWQlEwVXNhMEpCUVVFN1JVRkRRU3h6UlVGQlFUdEZRVU5CTEd0Q1FVRkJPMFZCUTBFc1lVRkJRVHRCUTFaR08wRkVXVVU3UlVGRFJTeHpRa0ZCUVR0RlFVTkJMR2RDUVVGQk8wVkJRMEVzVjBGQlFUdEZRVU5CTEdkQ1FVRkJPMFZCUTBFc2JVSkJRVUU3UVVOV1NqdEJSR0ZGTzBWQlEwVXNhMEpCUVVFN1JVRkRRU3hsUVVGQk8wRkRXRW83UVVSalJUdEZRVU5GTEZkQlFVRTdRVU5hU2p0QlJHVkZPMFZCUTBVc1kwRkJRVHRGUVVOQkxIZENRVUZCTzBGRFlrbzdPMEZFYVVKQk8wVkJRMFVzZFVKQlFVRTdRVU5rUmp0QlJHZENSVHRGUVVORkxHOUNRVUZCTzBWQlFVRXNiMEpCUVVFN1JVRkJRU3hoUVVGQk8wVkJRMEVzTUVKQlFVRTdUVUZCUVN4MVFrRkJRVHRWUVVGQkxHOUNRVUZCTzBWQlEwRXNkMEpCUVVFN1RVRkJRU3h4UWtGQlFUdFZRVUZCTEhWQ1FVRkJPMEZEWkVvN1FVUnBRa1U3UlVGRFJTeG5Ra0ZCUVR0QlEyWktPMEZFYVVKSk8wVkJRMFVzVjBGQlFUdEZRVU5CTEZsQlFVRTdSVUZEUVN4dlFrRkJRVHRMUVVGQkxHbENRVUZCTzBGRFprNDdRVVJyUWtrN1JVRkRSU3haUVVGQk8wVkJRMEVzYjBKQlFVRTdTMEZCUVN4cFFrRkJRVHRCUTJoQ1RqdEJSRzlDUlR0RlFVTkZMR2RDUVVGQk8wVkJRMEVzYVVKQlFVRTdSVUZEUVN4bFFVRkJPMFZCUTBFc1owSkJRVUU3UlVGRFFTeG5Ra0ZCUVR0QlEyeENTanRCUkc5Q1NUdEZRVU5GTEdORmVrWlJPMFZHTUVaU0xHZENRVUZCTzBGRGJFSk9PenRCUkhWQ1FUdEZRVU5GTEdWQlFVRTdRVU53UWtZN1FVUnpRa1U3UlVGRFJTeHJRa0ZCUVR0RlFVTkJMR1ZCUVVFN1JVRkRRU3huUWtGQlFUdEZRVU5CTEcxQ1FVRkJPMEZEY0VKS08wRkVkVUpGTzBWQlEwVXNZMEZCUVR0RlFVTkJMR2RDUVVGQk8wVkJRMEVzYTBKQlFVRTdSVUZEUVN4bFFVRkJPMFZCUTBFc1owSkJRVUU3UlVGRFFTeGpRVUZCTzBGRGNrSktPMEZFZDBKRk8wVkJRMFVzYVVKQlFVRTdRVU4wUWtvN1FVUjVRa1U3UlVGRFJTeHZRa0ZCUVR0RlFVTkJMRzlDUVVGQk8wVkJRVUVzYjBKQlFVRTdSVUZCUVN4aFFVRkJPMFZCUTBFc2VVSkJRVUU3VFVGQlFTeHpRa0ZCUVR0VlFVRkJMRzFDUVVGQk8wVkJRMEVzZVVKQlFVRTdUVUZCUVN3MlFrRkJRVHRGUVVOQkxHMUNRVUZCTzAxQlFVRXNaVUZCUVR0QlEzWkNTanRCUkhsQ1NUdEZRVU5GTERoQ1FVRkJPMFZCUVVFc09FSkJRVUU3VFVGQlFTd3JRa0ZCUVR0VlFVRkJMREpDUVVGQk8wRkRka0pPTzBGRU1FSkpPMFZCUTBVc1owSkJRVUU3UVVONFFrNDdRVVEwUWtVN1JVRkRSU3hWUVVGQk8wRkRNVUpLTzBGRU1rSkpPMFZCUTBVc1pVRkJRVHRGUVVOQkxHZENRVUZCTzBGRGVrSk9PMEZFTkVKSk8wVkJRMFVzY1VKQlFVRTdSVUZEUVN4bFFVRkJPMFZCUTBFc2FVSkJRVUU3UVVNeFFrNDdRVVE0UWtVN1JVRkRSU3hqUVVGQk8wVkJRMEVzWlVGQlFUdEZRVU5CTEdWQlFVRTdSVUZEUVN4cFFrRkJRVHRGUVVOQkxIbENRVUZCTzBWQlEwRXNhMEpCUVVFN1JVRkRRU3h4UWtGQlFUdEJRelZDU2pzN1FVUm5RMEU3UlVGRFJTeDFRa0ZCUVR0QlF6ZENSanRCUkN0Q1JUdEZRVU5GTEZkQlFVRTdSVUZEUVN4WlFVRkJPMEZETjBKS08wRkVLMEpKTzBWQlEwVXNkMEpCUVVFN1FVTTNRazQ3UVVSblEwazdSVUZEUlN4cFFrRkJRVHRCUXpsQ1RqdEJSR2xEU1R0RlFVTkZMRzlDUVVGQk8wRkRMMEpPTzBGRWEwTkpPMFZCUTBVc2QwSkJRVUU3UlVGRFFTeHZRa0ZCUVR0RlFVRkJMRzlDUVVGQk8wVkJRVUVzWVVGQlFUdEZRVU5CTEhsQ1FVRkJPMDFCUVVFc2MwSkJRVUU3VlVGQlFTeHRRa0ZCUVR0RlFVTkJMSGRDUVVGQk8wMUJRVUVzY1VKQlFVRTdWVUZCUVN4MVFrRkJRVHRCUTJoRFRqdEJSR3REVFR0RlFVTkZMR05CUVVFN1JVRkRRU3hYUVVGQk8wVkJRMEVzV1VGQlFUdEZRVU5CTEc5Q1FVRkJPMHRCUVVFc2FVSkJRVUU3UVVOb1ExSTdRVVJ2UTBrN1JVRkRSU3gxUWtGQlFUdEJRMnhEVGp0QlJIRkRTVHRGUVVORkxHMUNRVUZCTzBWQlEwRXNWMEZCUVR0QlEyNURUanRCUkhORFNUdEZRVU5GTEUxQlFVRTdSVUZEUVN4VFFVRkJPMFZCUTBFc1QwRkJRVHRCUTNCRFRqczdRVVI1UTBFN1JVRkRSVHRKUVVORkxITkNRVUZCTzBWRGRFTkdPMFZFZVVOSk8wbEJRMFVzZFVKQlFVRTdSVU4yUTA0N1FVRkRSanRCUkRSRFFUdEZRVWROTzBsQlEwVXNkMEpCUVVFN1JVTTFRMDQ3UVVGRFJqdEJSR2xFUVR0RlFVVkpPMGxCUTBVc1ZVRkJRVHRGUTJoRVNqdEZSR2xFU1R0SlFVTkZMR1ZCUVVFN1JVTXZRMDQ3UlVSclJFazdTVUZEUlN4bFFVRkJPMFZEYUVST08wVkViVVJGTzBsQlEwVXNWVUZCUVR0RlEycEVTanRGUkhGRVFUdEpRVU5GTEhOQ1FVRkJPMFZEYmtSR08wVkViMFJGTzBsQlEwVXNiVUpCUVVFN1VVRkJRU3hsUVVGQk8wbEJRMEVzTkVKQlFVRTdTVUZCUVN3NFFrRkJRVHRSUVVGQkxHdERRVUZCTzFsQlFVRXNPRUpCUVVFN1JVTnNSRW83UlVSeFJFVTdTVUZEUlN4blFrRkJRVHRKUVVOQkxGZEJRVUU3U1VGRFFTeG5Ra0ZCUVR0RlEyNUVTanRGUkhGRVNUdEpRVU5GTEdGQlFVRTdTVUZEUVN4clFrRkJRVHRGUTI1RVRqdEZSSFZFUlR0SlFVTkZMRlZCUVVFN1NVRkRRU3hqUVVGQk8wbEJRMEVzWjBKQlFVRTdTVUZEUVN4blFrRkJRVHRGUTNKRVNqdEJRVU5HTzBGRWVVUkJPMFZCUlVrN1NVRkRSU3hsUVVGQk8wVkRlRVJLTzBWRU5rUkZPMGxCUTBVc1lVRkJRVHRGUXpORVNqdEZSRGhFUlR0SlFVTkZMR05CUVVFN1NVRkRRU3huUWtGQlFUdEZRelZFU2p0RlJEaEVTVHRKUVVORkxHTkZkRk5OTzBsR2RWTk9MR1ZCUVVFN1JVTTFSRTQ3UlVSclJVVTdTVUZEUlN4VlFVRkJPMFZEYUVWS08wVkViVVZGTzBsQlEwVXNhVUpCUVVFN1NVRkRRU3hWUVVGQk8wVkRha1ZLTzBGQlEwWTdRVVJ4UlVFN1JVRkZTVHRKUVVORkxEUkNRVUZCTzBsQlFVRXNOa0pCUVVFN1VVRkJRU3d3UWtGQlFUdFpRVUZCTEhOQ1FVRkJPMGxCUTBFc2JVSkJRVUU3UlVOd1JVbzdSVVIxUlVVN1NVRkRSU3hWUVVGQk8wVkRja1ZLTzBWRWQwVkZPMGxCUTBVc2EwSkJRVUU3U1VGRFFTeGpRVUZCTzBsQlEwRXNaMEpCUVVFN1NVRkRRU3hWUVVGQk8wVkRkRVZLTzBWRWQwVkpPMGxCUTBVc1pVRkJRVHRGUTNSRlRqdEZSRFpGU1R0SlFVTkZMR0ZCUVVFN1JVTXpSVTQ3UVVGRFJqdEJSR2RHUVR0RlFVVkpPMGxCUTBVc1YwRkJRVHRGUXk5RlNqdEZSRzlHUlR0SlFVTkZMR2xDUVVGQk8wVkRiRVpLTzBWRWIwWkZPMGxCUTBVc1pVRkJRVHRGUTJ4R1NqdEJRVU5HTzBGRWMwWkJPMFZCUlVrN1NVRkRSU3hsUVVGQk8wVkRja1pLTzBWRWQwWkZPMGxCUTBVc1pVRkJRVHRGUTNSR1NqdEZSRFJHU1R0SlFVTkZMR0ZCUVVFN1JVTXhSazQ3UVVGRFJqdEJSR2RIUVR0RlFVVkpPMGxCUTBVc1pVRkJRVHRGUXk5R1NqdEZSR3RIUlR0SlFVTkZMR1ZCUVVFN1JVTm9SMG83UVVGRFJqdEJRVU5CTzBGQlEwRXNNRUpCUVRCQ0xHdEVRVUZyUkR0QlFVTTFSU3cwUlVGQk5FVXNiVVJCUVcxRU8wRkJReTlJTEU5QlFVOHNjMFZCUVhORk8wRkJRemRGT3p0RFFVVkRPenRCUVVWRU96dEJRVVZCT3p0QlFVVkJPenREUVVWRE96dEJRVVZFT3p0QlFVVkJPenRCUVVWQk96dERRVVZET3p0QlFVVkVPenRCUVVWQk96dEJRVVZCT3p0RFFVVkRPenRCUVVWRU96dEJRVVZCT3p0QlFVVkJPenREUVVWRE96dEJRVVZFT3p0QlFVVkJPenRCUVVWQk96dERRVVZET3p0QlFVVkVPenRCUVVWQk96dEJRVVZCT3p0RFFVVkRPenRCUVVWRU96dEJRVVZCT3p0QlFVVkJPenREUVVWRE96dEJRVVZFT3p0QlFVVkJPenRCUVVWQklpd2labWxzWlNJNkluQnliMjF2TG1OemN5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJa0JwYlhCdmNuUWdYQ0ppWVhObEwzWmhjbWxoWW14bGMxd2lPMXh5WEc1Y2NseHVMbTVoZGlCN1hISmNiaUFnSmw5ZmJHbHVheXhjY2x4dUlDQW1YMTlpZEc0Z2UxeHlYRzRnSUNBZ1kyOXNiM0k2SUNObVptWTdYSEpjYmlBZ2ZWeHlYRzVjY2x4dUlDQW1YMTlpZFhSMGIyNHRiVzlpYVd4bElIdGNjbHh1SUNBZ0lHUnBjM0JzWVhrNklHNXZibVU3WEhKY2JpQWdmVnh5WEc1OVhISmNibHh5WEc0dWFHVmhaR1Z5WDE5b1lXMWlkWEpuWlhJdGJHbHVaU0I3WEhKY2JpQWdZbUZqYTJkeWIzVnVaRG9nSTJabVppQWhhVzF3YjNKMFlXNTBPMXh5WEc1OVhISmNibHh5WEc0dWMzZHBkR05vTFd4aGJtY2dlMXh5WEc0Z0lDWXRZWEp5YjNjZ2UxeHlYRzRnSUNBZ0pqbzZZV1owWlhJZ2UxeHlYRzRnSUNBZ0lDQmpiMjUwWlc1ME9pQmNJbHdpTzF4eVhHNGdJQ0FnSUNCaVlXTnJaM0p2ZFc1a09pQjFjbXdvWENJdUxpOXBiV2N2YUdWeWJ5OXZjR1Z1YkdGdVoyeHBjM1JwWTI5dUxuTjJaMXdpS1R0Y2NseHVJQ0FnSUgxY2NseHVJQ0I5WEhKY2JpQWdMbTl3Wlc0Z0ppMWhjbkp2ZHpvNllXWjBaWElzWEhKY2JpQWdMbTVoZGk1aFkzUnBkbVVnTG05d1pXNGdKaTFoY25KdmR6bzZZV1owWlhJZ2UxeHlYRzRnSUNBZ1ltRmphMmR5YjNWdVpEb2dkWEpzS0Z3aUxpNHZhVzFuTDJobGNtOHZZMnh2YzJWc1lXNW5iR2x6ZEdsamIyNHVjM1puWENJcE8xeHlYRzRnSUgxY2NseHVmVnh5WEc1Y2NseHVMbkJ5YjIxdklIdGNjbHh1SUNCd2IzTnBkR2x2YmpvZ2NtVnNZWFJwZG1VN1hISmNiaUFnWW1GamEyZHliM1Z1WkRvZ2RYSnNLRndpTGk0dmFXMW5MMmhsY204dmNISnZiVzh0WW1jdWNHNW5YQ0lwSUdObGJuUmxjaUIwYjNBdlkyOTJaWElnYm04dGNtVndaV0YwTzF4eVhHNGdJSEJoWkdScGJtY3RkRzl3T2lBeU16QndlRHRjY2x4dUlDQm9aV2xuYUhRNklERXdNSFpvTzF4eVhHNWNjbHh1SUNBbVgxOTBhWFJzWlNCN1hISmNiaUFnSUNCbWIyNTBMV1poYldsc2VUb2dYQ0pOWVc1eWIzQmxYQ0k3WEhKY2JpQWdJQ0JtYjI1MExYZGxhV2RvZERvZ09EQXdPMXh5WEc0Z0lDQWdZMjlzYjNJNklDTm1abVk3WEhKY2JpQWdJQ0JtYjI1MExYTnBlbVU2SURFd01IQjRPMXh5WEc0Z0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ01qQndlRHRjY2x4dUlDQjlYSEpjYmx4eVhHNGdJQ1pmWDNSbGVIUWdlMXh5WEc0Z0lDQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh5WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF6TW5CNE8xeHlYRzRnSUgxY2NseHVYSEpjYmlBZ0psOWZjM1ZpZEdsMGJHVWdlMXh5WEc0Z0lDQWdZMjlzYjNJNklDTm1abVk3WEhKY2JpQWdmVnh5WEc1Y2NseHVJQ0FtWDE5aGNuSnZkeUI3WEhKY2JpQWdJQ0JrYVhOd2JHRjVPaUJpYkc5amF6dGNjbHh1SUNBZ0lHMWhjbWRwYmpvZ016QndlQ0JoZFhSdklEQWdZWFYwYnp0Y2NseHVJQ0I5WEhKY2JuMWNjbHh1WEhKY2JpNXdjbTlqWlhOeklIdGNjbHh1SUNCd1lXUmthVzVuT2lBeE1UVndlQ0F3SURZd2NIZ2dNRHRjY2x4dVhISmNiaUFnSmw5ZmFYUmxiWE1nZTF4eVhHNGdJQ0FnWkdsemNHeGhlVG9nWm14bGVEdGNjbHh1SUNBZ0lHRnNhV2R1TFdsMFpXMXpPaUJ6ZEhKbGRHTm9PMXh5WEc0Z0lDQWdhblZ6ZEdsbWVTMWpiMjUwWlc1ME9pQmpaVzUwWlhJN1hISmNiaUFnZlZ4eVhHNWNjbHh1SUNBbVgxOTJhV1JsYnlCN1hISmNiaUFnSUNCdFlYZ3RkMmxrZEdnNklEUTFNSEI0TzF4eVhHNWNjbHh1SUNBZ0lIWnBaR1Z2SUh0Y2NseHVJQ0FnSUNBZ2QybGtkR2c2SURFd01DVTdYSEpjYmlBZ0lDQWdJR2hsYVdkb2REb2dNVEF3SlR0Y2NseHVJQ0FnSUNBZ2IySnFaV04wTFdacGREb2dZMjkyWlhJN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdhVzFuSUh0Y2NseHVJQ0FnSUNBZ2FHVnBaMmgwT2lBeE1EQWxPMXh5WEc0Z0lDQWdJQ0J2WW1wbFkzUXRabWwwT2lCamIzWmxjanRjY2x4dUlDQWdJSDFjY2x4dUlDQjlYSEpjYmx4eVhHNGdJQ1pmWDNSbGVIUWdlMXh5WEc0Z0lDQWdiV0Y0TFhkcFpIUm9PaUEwT0RCd2VEdGNjbHh1SUNBZ0lHMWhjbWRwYmkxc1pXWjBPaUF6TUhCNE8xeHlYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQXhPSEI0TzF4eVhHNGdJQ0FnYkdsdVpTMW9aV2xuYUhRNklERXVOanRjY2x4dUlDQWdJR1p2Ym5RdGQyVnBaMmgwT2lBMU1EQTdYSEpjYmx4eVhHNGdJQ0FnTG1keVpXVnVMWFJsZUhRZ2UxeHlYRzRnSUNBZ0lDQmpiMnh2Y2pvZ0pHZHlaV1Z1TFdOdmJHOXlPMXh5WEc0Z0lDQWdJQ0JtYjI1MExYZGxhV2RvZERvZ09EQXdPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lIMWNjbHh1ZlZ4eVhHNWNjbHh1TG1GaWIzVjBJSHRjY2x4dUlDQndZV1JrYVc1bk9pQTJNSEI0SURBN1hISmNibHh5WEc0Z0lDWmZYM1JwZEd4bElIdGNjbHh1SUNBZ0lIUmxlSFF0WVd4cFoyNDZJR05sYm5SbGNqdGNjbHh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNelp3ZUR0Y2NseHVJQ0FnSUdadmJuUXRkMlZwWjJoME9pQTNNREE3WEhKY2JpQWdJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXpNSEI0TzF4eVhHNGdJSDFjY2x4dVhISmNiaUFnSmw5ZmMzVmlkR2wwYkdVZ2UxeHlYRzRnSUNBZ2JXRnlaMmx1T2lBd0lHRjFkRzg3WEhKY2JpQWdJQ0J0WVhndGQybGtkR2c2SURVd01IQjRPMXh5WEc0Z0lDQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh5WEc0Z0lDQWdabTl1ZEMxemFYcGxPaUF4T0hCNE8xeHlYRzRnSUNBZ2JHbHVaUzFvWldsbmFIUTZJREV1TkR0Y2NseHVJQ0FnSUdOdmJHOXlPaUFqTkRZME5qUTJPMXh5WEc0Z0lIMWNjbHh1WEhKY2JpQWdKbDlmYVhSbGJYTWdlMXh5WEc0Z0lDQWdiV0Z5WjJsdUxYUnZjRG9nTVRBd2NIZzdYSEpjYmlBZ2ZWeHlYRzVjY2x4dUlDQW1YMTlwZEdWdElIdGNjbHh1SUNBZ0lHMWhjbWRwYmkxaWIzUjBiMjA2SURJd01IQjRPMXh5WEc0Z0lDQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2NseHVJQ0FnSUdGc2FXZHVMV2wwWlcxek9pQmpaVzUwWlhJN1hISmNiaUFnSUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUhOd1lXTmxMV0Z5YjNWdVpEdGNjbHh1SUNBZ0lHWnNaWGd0ZDNKaGNEb2dkM0poY0R0Y2NseHVYSEpjYmlBZ0lDQW1PbTUwYUMxamFHbHNaQ2d5S1NCN1hISmNiaUFnSUNBZ0lHWnNaWGd0WkdseVpXTjBhVzl1T2lCeWIzY3RjbVYyWlhKelpUdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FtT214aGMzUXRZMmhwYkdRZ2UxeHlYRzRnSUNBZ0lDQnRZWEpuYVc0dFltOTBkRzl0T2lBd08xeHlYRzRnSUNBZ2ZWeHlYRzRnSUgxY2NseHVYSEpjYmlBZ0psOWZkR1Y0ZENCN1hISmNiaUFnSUNCM2FXUjBhRG9nTXpVbE8xeHlYRzRnSUNBZ0ppMTBhWFJzWlNCN1hISmNiaUFnSUNBZ0lHWnZiblF0YzJsNlpUb2dNelp3ZUR0Y2NseHVJQ0FnSUNBZ1ptOXVkQzEzWldsbmFIUTZJRFV3TUR0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQW1MV1JsYzJNZ2UxeHlYRzRnSUNBZ0lDQnRZWEpuYVc0NklESTBjSGdnTUNBek1IQjRJREE3WEhKY2JpQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ01UaHdlRHRjY2x4dUlDQWdJQ0FnYkdsdVpTMW9aV2xuYUhRNklERTJNQ1U3WEhKY2JpQWdJQ0I5WEhKY2JpQWdmVnh5WEc1Y2NseHVJQ0FtWDE5c2FXNXJJSHRjY2x4dUlDQWdJR052Ykc5eU9pQWpNREEzT1RRM08xeHlYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQXhObkI0TzF4eVhHNGdJQ0FnWTNWeWMyOXlPaUJ3YjJsdWRHVnlPMXh5WEc0Z0lDQWdjR0ZrWkdsdVp6b2dPSEI0SURJMGNIZzdYSEpjYmlBZ0lDQmliM0prWlhJNklERndlQ0J6YjJ4cFpDQWtaM0psWlc0dFkyOXNiM0k3WEhKY2JpQWdJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQTFjSGc3WEhKY2JpQWdJQ0JrYVhOd2JHRjVPaUJwYm14cGJtVXRZbXh2WTJzN1hISmNiaUFnZlZ4eVhHNTlYSEpjYmx4eVhHNHVaMkZzYkdWeWVTQjdYSEpjYmlBZ2NHRmtaR2x1WnpvZ01qQXdjSGdnTUNBMk1IQjRJREE3WEhKY2JseHlYRzRnSUM1emQybHdaWElnZTF4eVhHNGdJQ0FnZDJsa2RHZzZJREV3TUNVN1hISmNiaUFnSUNCb1pXbG5hSFE2SURFd01DVTdYSEpjYmx4eVhHNGdJQ0FnSmkxM2NtRndjR1Z5SUh0Y2NseHVJQ0FnSUNBZ2FHVnBaMmgwT2lBME16VndlQ0FoYVcxd2IzSjBZVzUwTzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDWXRkRzl3TFhOc2FXUmxjaUI3WEhKY2JpQWdJQ0FnSUhCaFpHUnBibWN0ZEc5d09pQTBNSEI0TzF4eVhHNGdJQ0FnZlZ4eVhHNWNjbHh1SUNBZ0lDWXRZbTkwZEc5dExYTnNhV1JsY2lCN1hISmNiaUFnSUNBZ0lIQmhaR1JwYm1jdFltOTBkRzl0T2lBeU1IQjRPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNZdGMyeHBaR1VnZTF4eVhHNGdJQ0FnSUNCb1pXbG5hSFE2SURReU1IQjRJQ0ZwYlhCdmNuUmhiblE3WEhKY2JpQWdJQ0FnSUdScGMzQnNZWGs2SUdac1pYZzdYSEpjYmlBZ0lDQWdJR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEhKY2JpQWdJQ0FnSUdwMWMzUnBabmt0WTI5dWRHVnVkRG9nWTJWdWRHVnlPMXh5WEc1Y2NseHVJQ0FnSUNBZ2FXMW5JSHRjY2x4dUlDQWdJQ0FnSUNCa2FYTndiR0Y1T2lCaWJHOWphenRjY2x4dUlDQWdJQ0FnSUNCM2FXUjBhRG9nTVRBd0pUdGNjbHh1SUNBZ0lDQWdJQ0JvWldsbmFIUTZJREV3TUNVN1hISmNiaUFnSUNBZ0lDQWdiMkpxWldOMExXWnBkRG9nWTI5MlpYSTdYSEpjYmlBZ0lDQWdJSDFjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNBbUxYTmpjbTlzYkdKaGNpQjdYSEpjYmlBZ0lDQWdJR0poWTJ0bmNtOTFibVE2SUhSeVlXNXpjR0Z5Wlc1ME8xeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQ1l0YzJOeWIyeHNZbUZ5TFdSeVlXY2dlMXh5WEc0Z0lDQWdJQ0JpWVdOclozSnZkVzVrT2lBak5EWTBOalEyTzF4eVhHNGdJQ0FnSUNCb1pXbG5hSFE2SURKd2VEdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FtTFhSdmNDMXpZM0p2Ykd4aVlYSWdlMXh5WEc0Z0lDQWdJQ0IwYjNBNklEQTdYSEpjYmlBZ0lDQWdJR0p2ZEhSdmJUb2dNRHRjY2x4dUlDQWdJQ0FnYkdWbWREb2dNRHRjY2x4dUlDQWdJSDFjY2x4dUlDQjlYSEpjYm4xY2NseHVYSEpjYmtCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBeE16QXdjSGdwSUh0Y2NseHVJQ0F1WjJGc2JHVnllU0I3WEhKY2JpQWdJQ0J3WVdSa2FXNW5PaUEzTUhCNElEQWdOakJ3ZUNBd08xeHlYRzVjY2x4dUlDQWdJQzV6ZDJsd1pYSWdlMXh5WEc0Z0lDQWdJQ0FtTFhOc2FXUmxJSHRjY2x4dUlDQWdJQ0FnSUNCb1pXbG5hSFE2SURFd01DVWdJV2x0Y0c5eWRHRnVkRHRjY2x4dUlDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNGdJSDFjY2x4dWZWeHlYRzVjY2x4dVFHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklERXhPVGt1T1Rod2VDa2dlMXh5WEc0Z0lDNW5ZV3hzWlhKNUlIdGNjbHh1SUNBZ0lDNXpkMmx3WlhJZ2UxeHlYRzRnSUNBZ0lDQW1MWGR5WVhCd1pYSWdlMXh5WEc0Z0lDQWdJQ0FnSUdobGFXZG9kRG9nTXpNemNIZ2dJV2x0Y0c5eWRHRnVkRHRjY2x4dUlDQWdJQ0FnZlZ4eVhHNGdJQ0FnZlZ4eVhHNGdJSDFjY2x4dWZWeHlYRzVjY2x4dVFHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklEazVNUzQ1T0hCNEtTQjdYSEpjYmlBZ0xtRmliM1YwSUh0Y2NseHVJQ0FnSUNaZlgzUmxlSFFnZTF4eVhHNGdJQ0FnSUNCM2FXUjBhRG9nTkRVbE8xeHlYRzRnSUNBZ0lDQW1MWFJwZEd4bElIdGNjbHh1SUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2SURNeWNIZzdYSEpjYmlBZ0lDQWdJSDFjY2x4dVhISmNiaUFnSUNBZ0lDWXRaR1Z6WXlCN1hISmNiaUFnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF4TjNCNE8xeHlYRzRnSUNBZ0lDQjlYSEpjYmlBZ0lDQjlYSEpjYmlBZ0lDQW1YMTlwYldjZ2UxeHlYRzRnSUNBZ0lDQjNhV1IwYURvZ05EVWxPMXh5WEc0Z0lDQWdmVnh5WEc0Z0lIMWNjbHh1WEhKY2JpQWdMbkJ5YjJObGMzTWdlMXh5WEc0Z0lDQWdjR0ZrWkdsdVp6b2dOREJ3ZUNBd0lEWXdjSGdnTUR0Y2NseHVJQ0FnSUNaZlgybDBaVzF6SUh0Y2NseHVJQ0FnSUNBZ1pteGxlQzEzY21Gd09pQjNjbUZ3TzF4eVhHNGdJQ0FnSUNCbWJHVjRMV1JwY21WamRHbHZiam9nWTI5c2RXMXVMWEpsZG1WeWMyVTdYSEpjYmlBZ0lDQjlYSEpjYmx4eVhHNGdJQ0FnSmw5ZmRtbGtaVzhnZTF4eVhHNGdJQ0FnSUNCdFlYSm5hVzR0ZEc5d09pQTBNSEI0TzF4eVhHNGdJQ0FnSUNCM2FXUjBhRG9nTVRBd0pUdGNjbHh1SUNBZ0lDQWdiV0Y0TFhkcFpIUm9PaUIxYm5ObGREdGNjbHh1WEhKY2JpQWdJQ0FnSUhacFpHVnZJSHRjY2x4dUlDQWdJQ0FnSUNCb1pXbG5hSFE2SURRd01IQjRPMXh5WEc0Z0lDQWdJQ0FnSUdKdmNtUmxjaTF5WVdScGRYTTZJRFZ3ZUR0Y2NseHVJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZWeHlYRzVjY2x4dUlDQWdJQ1pmWDNSbGVIUWdlMXh5WEc0Z0lDQWdJQ0IzYVdSMGFEb2dPRE1sTzF4eVhHNGdJQ0FnSUNCdFlYSm5hVzQ2SURBZ1lYVjBienRjY2x4dUlDQWdJQ0FnZEdWNGRDMWhiR2xuYmpvZ2JHVm1kRHRjY2x4dUlDQWdJQ0FnYldGNExYZHBaSFJvT2lCMWJuTmxkRHRjY2x4dUlDQWdJSDFjY2x4dUlDQjlYSEpjYm4xY2NseHVYSEpjYmtCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBM05qY3VPVGh3ZUNrZ2UxeHlYRzRnSUM1d2NtOXRieUI3WEhKY2JpQWdJQ0FtWDE5MGFYUnNaU0I3WEhKY2JpQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ09EWndlRHRjY2x4dUlDQWdJSDFjY2x4dUlDQjlYSEpjYmx4eVhHNGdJQzV1WVhZZ2UxeHlYRzRnSUNBZ0psOWZZblYwZEc5dUlIdGNjbHh1SUNBZ0lDQWdaR2x6Y0d4aGVUb2dibTl1WlR0Y2NseHVJQ0FnSUgxY2NseHVYSEpjYmlBZ0lDQW1YMTlpZFhSMGIyNHRiVzlpYVd4bElIdGNjbHh1SUNBZ0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJzN1hISmNiaUFnSUNBZ0lHMWhjbWRwYmkxMGIzQTZJRE13Y0hnN1hISmNibHh5WEc0Z0lDQWdJQ0F1Ym1GMlgxOWlkRzRnZTF4eVhHNGdJQ0FnSUNBZ0lHTnZiRzl5T2lBa1lteGhZMnN0WTI5c2IzSTdYSEpjYmlBZ0lDQWdJQ0FnWm05dWRDMXphWHBsT2lBeU1IQjRPMXh5WEc0Z0lDQWdJQ0I5WEhKY2JpQWdJQ0I5WEhKY2JpQWdmVnh5WEc1Y2NseHVJQ0F1WVdKdmRYUWdlMXh5WEc0Z0lDQWdKbDlmYVcxbklIdGNjbHh1SUNBZ0lDQWdkMmxrZEdnNklEUXdKVHRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNBbVgxOTBaWGgwSUh0Y2NseHVJQ0FnSUNBZ2JXRnlaMmx1TFd4bFpuUTZJREkxY0hnN1hISmNiaUFnSUNBZ0lIZHBaSFJvT2lBMU1DVTdYSEpjYmlBZ0lDQjlYSEpjYmlBZ2ZWeHlYRzU5WEhKY2JseHlYRzVBYldWa2FXRWdLRzFoZUMxM2FXUjBhRG9nTmpVd2NIZ3BJSHRjY2x4dUlDQXVZV0p2ZFhRZ2UxeHlYRzRnSUNBZ0psOWZhWFJsYlNCN1hISmNiaUFnSUNBZ0lHWnNaWGd0WkdseVpXTjBhVzl1T2lCamIyeDFiVzQ3WEhKY2JpQWdJQ0FnSUcxaGNtZHBiaTFpYjNSMGIyMDZJRGd3Y0hnN1hISmNiaUFnSUNCOVhISmNibHh5WEc0Z0lDQWdKbDlmYVcxbklIdGNjbHh1SUNBZ0lDQWdkMmxrZEdnNklEWXdKVHRjY2x4dUlDQWdJSDFjY2x4dVhISmNiaUFnSUNBbVgxOTBaWGgwSUh0Y2NseHVJQ0FnSUNBZ2RHVjRkQzFoYkdsbmJqb2dZMlZ1ZEdWeU8xeHlYRzRnSUNBZ0lDQnRZWEpuYVc0dGJHVm1kRG9nTUR0Y2NseHVJQ0FnSUNBZ2JXRnlaMmx1TFhSdmNEb2dNelp3ZUR0Y2NseHVJQ0FnSUNBZ2QybGtkR2c2SURjMUpUdGNjbHh1WEhKY2JpQWdJQ0FnSUNZdGRHbDBiR1VnZTF4eVhHNGdJQ0FnSUNBZ0lHWnZiblF0YzJsNlpUb2dNamh3ZUR0Y2NseHVJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZWeHlYRzRnSUgxY2NseHVYSEpjYmlBZ0xuQnliMk5sYzNNZ2UxeHlYRzRnSUNBZ0psOWZkbWxrWlc4Z2UxeHlYRzRnSUNBZ0lDQjJhV1JsYnlCN1hISmNiaUFnSUNBZ0lDQWdhR1ZwWjJoME9pQXlOVEJ3ZUR0Y2NseHVJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZWeHlYRzRnSUgxY2NseHVmVnh5WEc1Y2NseHVRRzFsWkdsaElDaHRZWGd0ZDJsa2RHZzZJRFUzTjNCNEtTQjdYSEpjYmlBZ0xtNWhkaUI3WEhKY2JpQWdJQ0FtWDE5c2FXNXJjeUI3WEhKY2JpQWdJQ0FnSUhkcFpIUm9PaUF4TURBbE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUgxY2NseHVYSEpjYmlBZ0xuQnliMjF2SUh0Y2NseHVJQ0FnSUNaZlgzUmxlSFFnZTF4eVhHNGdJQ0FnSUNCd1lXUmthVzVuTFhSdmNEb2dOREJ3ZUR0Y2NseHVJQ0FnSUgxY2NseHVJQ0FnSUNaZlgzUnBkR3hsSUh0Y2NseHVJQ0FnSUNBZ1ptOXVkQzF6YVhwbE9pQTJPSEI0TzF4eVhHNGdJQ0FnZlZ4eVhHNGdJSDFjY2x4dWZWeHlYRzVjY2x4dVFHMWxaR2xoSUNodFlYZ3RkMmxrZEdnNklEUTRNM0I0S1NCN1hISmNiaUFnTG5CeWIyMXZJSHRjY2x4dUlDQWdJQ1pmWDNScGRHeGxJSHRjY2x4dUlDQWdJQ0FnWm05dWRDMXphWHBsT2lBMU5uQjRPMXh5WEc0Z0lDQWdmVnh5WEc1Y2NseHVJQ0FnSUNaZlgzTjFZblJwZEd4bElIdGNjbHh1SUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF5Tm5CNE8xeHlYRzRnSUNBZ2ZWeHlYRzRnSUgxY2NseHVYSEpjYmlBZ0xuQnliMk5sYzNNZ2UxeHlYRzRnSUNBZ0psOWZkbWxrWlc4Z2UxeHlYRzRnSUNBZ0lDQjJhV1JsYnlCN1hISmNiaUFnSUNBZ0lDQWdhR1ZwWjJoME9pQXhPREJ3ZUR0Y2NseHVJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ2ZWeHlYRzRnSUgxY2NseHVmVnh5WEc1Y2NseHVYSEpjYmtCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBek5qQndlQ2tnZTF4eVhHNGdJQzV3Y205dGJ5QjdYSEpjYmlBZ0lDQW1YMTkwYVhSc1pTQjdYSEpjYmlBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTkRKd2VEdGNjbHh1SUNBZ0lIMWNjbHh1WEhKY2JpQWdJQ0FtWDE5emRXSjBhWFJzWlNCN1hISmNiaUFnSUNBZ0lHWnZiblF0YzJsNlpUb2dNakJ3ZUR0Y2NseHVJQ0FnSUgxY2NseHVJQ0I5WEhKY2JuMGlMQ0l1Ym1GMlgxOXNhVzVyTENBdWJtRjJYMTlpZEc0Z2UxeHVJQ0JqYjJ4dmNqb2dJMlptWmp0Y2JuMWNiaTV1WVhaZlgySjFkSFJ2YmkxdGIySnBiR1VnZTF4dUlDQmthWE53YkdGNU9pQnViMjVsTzF4dWZWeHVYRzR1YUdWaFpHVnlYMTlvWVcxaWRYSm5aWEl0YkdsdVpTQjdYRzRnSUdKaFkydG5jbTkxYm1RNklDTm1abVlnSVdsdGNHOXlkR0Z1ZER0Y2JuMWNibHh1TG5OM2FYUmphQzFzWVc1bkxXRnljbTkzT2pwaFpuUmxjaUI3WEc0Z0lHTnZiblJsYm5RNklGd2lYQ0k3WEc0Z0lHSmhZMnRuY205MWJtUTZJSFZ5YkNoY0lpNHVMMmx0Wnk5b1pYSnZMMjl3Wlc1c1lXNW5iR2x6ZEdsamIyNHVjM1puWENJcE8xeHVmVnh1TG05d1pXNGdMbk4zYVhSamFDMXNZVzVuTFdGeWNtOTNPanBoWm5SbGNpd2dMbTVoZGk1aFkzUnBkbVVnTG05d1pXNGdMbk4zYVhSamFDMXNZVzVuTFdGeWNtOTNPanBoWm5SbGNpQjdYRzRnSUdKaFkydG5jbTkxYm1RNklIVnliQ2hjSWk0dUwybHRaeTlvWlhKdkwyTnNiM05sYkdGdVoyeHBjM1JwWTI5dUxuTjJaMXdpS1R0Y2JuMWNibHh1TG5CeWIyMXZJSHRjYmlBZ2NHOXphWFJwYjI0NklISmxiR0YwYVhabE8xeHVJQ0JpWVdOclozSnZkVzVrT2lCMWNtd29YQ0l1TGk5cGJXY3ZhR1Z5Ynk5d2NtOXRieTFpWnk1d2JtZGNJaWtnWTJWdWRHVnlJSFJ2Y0M5amIzWmxjaUJ1YnkxeVpYQmxZWFE3WEc0Z0lIQmhaR1JwYm1jdGRHOXdPaUF5TXpCd2VEdGNiaUFnYUdWcFoyaDBPaUF4TURCMmFEdGNibjFjYmk1d2NtOXRiMTlmZEdsMGJHVWdlMXh1SUNCbWIyNTBMV1poYldsc2VUb2dYQ0pOWVc1eWIzQmxYQ0k3WEc0Z0lHWnZiblF0ZDJWcFoyaDBPaUE0TURBN1hHNGdJR052Ykc5eU9pQWpabVptTzF4dUlDQm1iMjUwTFhOcGVtVTZJREV3TUhCNE8xeHVJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXlNSEI0TzF4dWZWeHVMbkJ5YjIxdlgxOTBaWGgwSUh0Y2JpQWdkR1Y0ZEMxaGJHbG5iam9nWTJWdWRHVnlPMXh1SUNCbWIyNTBMWE5wZW1VNklETXljSGc3WEc1OVhHNHVjSEp2Ylc5ZlgzTjFZblJwZEd4bElIdGNiaUFnWTI5c2IzSTZJQ05tWm1ZN1hHNTlYRzR1Y0hKdmJXOWZYMkZ5Y205M0lIdGNiaUFnWkdsemNHeGhlVG9nWW14dlkyczdYRzRnSUcxaGNtZHBiam9nTXpCd2VDQmhkWFJ2SURBZ1lYVjBienRjYm4xY2JseHVMbkJ5YjJObGMzTWdlMXh1SUNCd1lXUmthVzVuT2lBeE1UVndlQ0F3SURZd2NIZ2dNRHRjYm4xY2JpNXdjbTlqWlhOelgxOXBkR1Z0Y3lCN1hHNGdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJR0ZzYVdkdUxXbDBaVzF6T2lCemRISmxkR05vTzF4dUlDQnFkWE4wYVdaNUxXTnZiblJsYm5RNklHTmxiblJsY2p0Y2JuMWNiaTV3Y205alpYTnpYMTkyYVdSbGJ5QjdYRzRnSUcxaGVDMTNhV1IwYURvZ05EVXdjSGc3WEc1OVhHNHVjSEp2WTJWemMxOWZkbWxrWlc4Z2RtbGtaVzhnZTF4dUlDQjNhV1IwYURvZ01UQXdKVHRjYmlBZ2FHVnBaMmgwT2lBeE1EQWxPMXh1SUNCdlltcGxZM1F0Wm1sME9pQmpiM1psY2p0Y2JuMWNiaTV3Y205alpYTnpYMTkyYVdSbGJ5QnBiV2NnZTF4dUlDQm9aV2xuYUhRNklERXdNQ1U3WEc0Z0lHOWlhbVZqZEMxbWFYUTZJR052ZG1WeU8xeHVmVnh1TG5CeWIyTmxjM05mWDNSbGVIUWdlMXh1SUNCdFlYZ3RkMmxrZEdnNklEUTRNSEI0TzF4dUlDQnRZWEpuYVc0dGJHVm1kRG9nTXpCd2VEdGNiaUFnWm05dWRDMXphWHBsT2lBeE9IQjRPMXh1SUNCc2FXNWxMV2hsYVdkb2REb2dNUzQyTzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nTlRBd08xeHVmVnh1TG5CeWIyTmxjM05mWDNSbGVIUWdMbWR5WldWdUxYUmxlSFFnZTF4dUlDQmpiMnh2Y2pvZ0l6QXlOamd6T1R0Y2JpQWdabTl1ZEMxM1pXbG5hSFE2SURnd01EdGNibjFjYmx4dUxtRmliM1YwSUh0Y2JpQWdjR0ZrWkdsdVp6b2dOakJ3ZUNBd08xeHVmVnh1TG1GaWIzVjBYMTkwYVhSc1pTQjdYRzRnSUhSbGVIUXRZV3hwWjI0NklHTmxiblJsY2p0Y2JpQWdabTl1ZEMxemFYcGxPaUF6Tm5CNE8xeHVJQ0JtYjI1MExYZGxhV2RvZERvZ056QXdPMXh1SUNCdFlYSm5hVzR0WW05MGRHOXRPaUF6TUhCNE8xeHVmVnh1TG1GaWIzVjBYMTl6ZFdKMGFYUnNaU0I3WEc0Z0lHMWhjbWRwYmpvZ01DQmhkWFJ2TzF4dUlDQnRZWGd0ZDJsa2RHZzZJRFV3TUhCNE8xeHVJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEk3WEc0Z0lHWnZiblF0YzJsNlpUb2dNVGh3ZUR0Y2JpQWdiR2x1WlMxb1pXbG5hSFE2SURFdU5EdGNiaUFnWTI5c2IzSTZJQ00wTmpRMk5EWTdYRzU5WEc0dVlXSnZkWFJmWDJsMFpXMXpJSHRjYmlBZ2JXRnlaMmx1TFhSdmNEb2dNVEF3Y0hnN1hHNTlYRzR1WVdKdmRYUmZYMmwwWlcwZ2UxeHVJQ0J0WVhKbmFXNHRZbTkwZEc5dE9pQXlNREJ3ZUR0Y2JpQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdZV3hwWjI0dGFYUmxiWE02SUdObGJuUmxjanRjYmlBZ2FuVnpkR2xtZVMxamIyNTBaVzUwT2lCemNHRmpaUzFoY205MWJtUTdYRzRnSUdac1pYZ3RkM0poY0RvZ2QzSmhjRHRjYm4xY2JpNWhZbTkxZEY5ZmFYUmxiVHB1ZEdndFkyaHBiR1FvTWlrZ2UxeHVJQ0JtYkdWNExXUnBjbVZqZEdsdmJqb2djbTkzTFhKbGRtVnljMlU3WEc1OVhHNHVZV0p2ZFhSZlgybDBaVzA2YkdGemRDMWphR2xzWkNCN1hHNGdJRzFoY21kcGJpMWliM1IwYjIwNklEQTdYRzU5WEc0dVlXSnZkWFJmWDNSbGVIUWdlMXh1SUNCM2FXUjBhRG9nTXpVbE8xeHVmVnh1TG1GaWIzVjBYMTkwWlhoMExYUnBkR3hsSUh0Y2JpQWdabTl1ZEMxemFYcGxPaUF6Tm5CNE8xeHVJQ0JtYjI1MExYZGxhV2RvZERvZ05UQXdPMXh1ZlZ4dUxtRmliM1YwWDE5MFpYaDBMV1JsYzJNZ2UxeHVJQ0J0WVhKbmFXNDZJREkwY0hnZ01DQXpNSEI0SURBN1hHNGdJR1p2Ym5RdGMybDZaVG9nTVRod2VEdGNiaUFnYkdsdVpTMW9aV2xuYUhRNklERTJNQ1U3WEc1OVhHNHVZV0p2ZFhSZlgyeHBibXNnZTF4dUlDQmpiMnh2Y2pvZ0l6QXdOemswTnp0Y2JpQWdabTl1ZEMxemFYcGxPaUF4Tm5CNE8xeHVJQ0JqZFhKemIzSTZJSEJ2YVc1MFpYSTdYRzRnSUhCaFpHUnBibWM2SURod2VDQXlOSEI0TzF4dUlDQmliM0prWlhJNklERndlQ0J6YjJ4cFpDQWpNREkyT0RNNU8xeHVJQ0JpYjNKa1pYSXRjbUZrYVhWek9pQTFjSGc3WEc0Z0lHUnBjM0JzWVhrNklHbHViR2x1WlMxaWJHOWphenRjYm4xY2JseHVMbWRoYkd4bGNua2dlMXh1SUNCd1lXUmthVzVuT2lBeU1EQndlQ0F3SURZd2NIZ2dNRHRjYm4xY2JpNW5ZV3hzWlhKNUlDNXpkMmx3WlhJZ2UxeHVJQ0IzYVdSMGFEb2dNVEF3SlR0Y2JpQWdhR1ZwWjJoME9pQXhNREFsTzF4dWZWeHVMbWRoYkd4bGNua2dMbk4zYVhCbGNpMTNjbUZ3Y0dWeUlIdGNiaUFnYUdWcFoyaDBPaUEwTXpWd2VDQWhhVzF3YjNKMFlXNTBPMXh1ZlZ4dUxtZGhiR3hsY25rZ0xuTjNhWEJsY2kxMGIzQXRjMnhwWkdWeUlIdGNiaUFnY0dGa1pHbHVaeTEwYjNBNklEUXdjSGc3WEc1OVhHNHVaMkZzYkdWeWVTQXVjM2RwY0dWeUxXSnZkSFJ2YlMxemJHbGtaWElnZTF4dUlDQndZV1JrYVc1bkxXSnZkSFJ2YlRvZ01qQndlRHRjYm4xY2JpNW5ZV3hzWlhKNUlDNXpkMmx3WlhJdGMyeHBaR1VnZTF4dUlDQm9aV2xuYUhRNklEUXlNSEI0SUNGcGJYQnZjblJoYm5RN1hHNGdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEc0Z0lHcDFjM1JwWm5rdFkyOXVkR1Z1ZERvZ1kyVnVkR1Z5TzF4dWZWeHVMbWRoYkd4bGNua2dMbk4zYVhCbGNpMXpiR2xrWlNCcGJXY2dlMXh1SUNCa2FYTndiR0Y1T2lCaWJHOWphenRjYmlBZ2QybGtkR2c2SURFd01DVTdYRzRnSUdobGFXZG9kRG9nTVRBd0pUdGNiaUFnYjJKcVpXTjBMV1pwZERvZ1kyOTJaWEk3WEc1OVhHNHVaMkZzYkdWeWVTQXVjM2RwY0dWeUxYTmpjbTlzYkdKaGNpQjdYRzRnSUdKaFkydG5jbTkxYm1RNklIUnlZVzV6Y0dGeVpXNTBPMXh1ZlZ4dUxtZGhiR3hsY25rZ0xuTjNhWEJsY2kxelkzSnZiR3hpWVhJdFpISmhaeUI3WEc0Z0lHSmhZMnRuY205MWJtUTZJQ00wTmpRMk5EWTdYRzRnSUdobGFXZG9kRG9nTW5CNE8xeHVmVnh1TG1kaGJHeGxjbmtnTG5OM2FYQmxjaTEwYjNBdGMyTnliMnhzWW1GeUlIdGNiaUFnZEc5d09pQXdPMXh1SUNCaWIzUjBiMjA2SURBN1hHNGdJR3hsWm5RNklEQTdYRzU5WEc1Y2JrQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQXhNekF3Y0hncElIdGNiaUFnTG1kaGJHeGxjbmtnZTF4dUlDQWdJSEJoWkdScGJtYzZJRGN3Y0hnZ01DQTJNSEI0SURBN1hHNGdJSDFjYmlBZ0xtZGhiR3hsY25rZ0xuTjNhWEJsY2kxemJHbGtaU0I3WEc0Z0lDQWdhR1ZwWjJoME9pQXhNREFsSUNGcGJYQnZjblJoYm5RN1hHNGdJSDFjYm4xY2JrQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQXhNVGs1TGprNGNIZ3BJSHRjYmlBZ0xtZGhiR3hsY25rZ0xuTjNhWEJsY2kxM2NtRndjR1Z5SUh0Y2JpQWdJQ0JvWldsbmFIUTZJRE16TTNCNElDRnBiWEJ2Y25SaGJuUTdYRzRnSUgxY2JuMWNia0J0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUE1T1RFdU9UaHdlQ2tnZTF4dUlDQXVZV0p2ZFhSZlgzUmxlSFFnZTF4dUlDQWdJSGRwWkhSb09pQTBOU1U3WEc0Z0lIMWNiaUFnTG1GaWIzVjBYMTkwWlhoMExYUnBkR3hsSUh0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURNeWNIZzdYRzRnSUgxY2JpQWdMbUZpYjNWMFgxOTBaWGgwTFdSbGMyTWdlMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNVGR3ZUR0Y2JpQWdmVnh1SUNBdVlXSnZkWFJmWDJsdFp5QjdYRzRnSUNBZ2QybGtkR2c2SURRMUpUdGNiaUFnZlZ4dUlDQXVjSEp2WTJWemN5QjdYRzRnSUNBZ2NHRmtaR2x1WnpvZ05EQndlQ0F3SURZd2NIZ2dNRHRjYmlBZ2ZWeHVJQ0F1Y0hKdlkyVnpjMTlmYVhSbGJYTWdlMXh1SUNBZ0lHWnNaWGd0ZDNKaGNEb2dkM0poY0R0Y2JpQWdJQ0JtYkdWNExXUnBjbVZqZEdsdmJqb2dZMjlzZFcxdUxYSmxkbVZ5YzJVN1hHNGdJSDFjYmlBZ0xuQnliMk5sYzNOZlgzWnBaR1Z2SUh0Y2JpQWdJQ0J0WVhKbmFXNHRkRzl3T2lBME1IQjRPMXh1SUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNBZ0lHMWhlQzEzYVdSMGFEb2dkVzV6WlhRN1hHNGdJSDFjYmlBZ0xuQnliMk5sYzNOZlgzWnBaR1Z2SUhacFpHVnZJSHRjYmlBZ0lDQm9aV2xuYUhRNklEUXdNSEI0TzF4dUlDQWdJR0p2Y21SbGNpMXlZV1JwZFhNNklEVndlRHRjYmlBZ2ZWeHVJQ0F1Y0hKdlkyVnpjMTlmZEdWNGRDQjdYRzRnSUNBZ2QybGtkR2c2SURnekpUdGNiaUFnSUNCdFlYSm5hVzQ2SURBZ1lYVjBienRjYmlBZ0lDQjBaWGgwTFdGc2FXZHVPaUJzWldaME8xeHVJQ0FnSUcxaGVDMTNhV1IwYURvZ2RXNXpaWFE3WEc0Z0lIMWNibjFjYmtCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBM05qY3VPVGh3ZUNrZ2UxeHVJQ0F1Y0hKdmJXOWZYM1JwZEd4bElIdGNiaUFnSUNCbWIyNTBMWE5wZW1VNklEZzJjSGc3WEc0Z0lIMWNiaUFnTG01aGRsOWZZblYwZEc5dUlIdGNiaUFnSUNCa2FYTndiR0Y1T2lCdWIyNWxPMXh1SUNCOVhHNGdJQzV1WVhaZlgySjFkSFJ2YmkxdGIySnBiR1VnZTF4dUlDQWdJR1JwYzNCc1lYazZJR0pzYjJOck8xeHVJQ0FnSUcxaGNtZHBiaTEwYjNBNklETXdjSGc3WEc0Z0lIMWNiaUFnTG01aGRsOWZZblYwZEc5dUxXMXZZbWxzWlNBdWJtRjJYMTlpZEc0Z2UxeHVJQ0FnSUdOdmJHOXlPaUFqTTBFelFUTkRPMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNakJ3ZUR0Y2JpQWdmVnh1SUNBdVlXSnZkWFJmWDJsdFp5QjdYRzRnSUNBZ2QybGtkR2c2SURRd0pUdGNiaUFnZlZ4dUlDQXVZV0p2ZFhSZlgzUmxlSFFnZTF4dUlDQWdJRzFoY21kcGJpMXNaV1owT2lBeU5YQjRPMXh1SUNBZ0lIZHBaSFJvT2lBMU1DVTdYRzRnSUgxY2JuMWNia0J0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUEyTlRCd2VDa2dlMXh1SUNBdVlXSnZkWFJmWDJsMFpXMGdlMXh1SUNBZ0lHWnNaWGd0WkdseVpXTjBhVzl1T2lCamIyeDFiVzQ3WEc0Z0lDQWdiV0Z5WjJsdUxXSnZkSFJ2YlRvZ09EQndlRHRjYmlBZ2ZWeHVJQ0F1WVdKdmRYUmZYMmx0WnlCN1hHNGdJQ0FnZDJsa2RHZzZJRFl3SlR0Y2JpQWdmVnh1SUNBdVlXSnZkWFJmWDNSbGVIUWdlMXh1SUNBZ0lIUmxlSFF0WVd4cFoyNDZJR05sYm5SbGNqdGNiaUFnSUNCdFlYSm5hVzR0YkdWbWREb2dNRHRjYmlBZ0lDQnRZWEpuYVc0dGRHOXdPaUF6Tm5CNE8xeHVJQ0FnSUhkcFpIUm9PaUEzTlNVN1hHNGdJSDFjYmlBZ0xtRmliM1YwWDE5MFpYaDBMWFJwZEd4bElIdGNiaUFnSUNCbWIyNTBMWE5wZW1VNklESTRjSGc3WEc0Z0lIMWNiaUFnTG5CeWIyTmxjM05mWDNacFpHVnZJSFpwWkdWdklIdGNiaUFnSUNCb1pXbG5hSFE2SURJMU1IQjRPMXh1SUNCOVhHNTlYRzVBYldWa2FXRWdLRzFoZUMxM2FXUjBhRG9nTlRjM2NIZ3BJSHRjYmlBZ0xtNWhkbDlmYkdsdWEzTWdlMXh1SUNBZ0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNCOVhHNGdJQzV3Y205dGIxOWZkR1Y0ZENCN1hHNGdJQ0FnY0dGa1pHbHVaeTEwYjNBNklEUXdjSGc3WEc0Z0lIMWNiaUFnTG5CeWIyMXZYMTkwYVhSc1pTQjdYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQTJPSEI0TzF4dUlDQjlYRzU5WEc1QWJXVmthV0VnS0cxaGVDMTNhV1IwYURvZ05EZ3pjSGdwSUh0Y2JpQWdMbkJ5YjIxdlgxOTBhWFJzWlNCN1hHNGdJQ0FnWm05dWRDMXphWHBsT2lBMU5uQjRPMXh1SUNCOVhHNGdJQzV3Y205dGIxOWZjM1ZpZEdsMGJHVWdlMXh1SUNBZ0lHWnZiblF0YzJsNlpUb2dNalp3ZUR0Y2JpQWdmVnh1SUNBdWNISnZZMlZ6YzE5ZmRtbGtaVzhnZG1sa1pXOGdlMXh1SUNBZ0lHaGxhV2RvZERvZ01UZ3djSGc3WEc0Z0lIMWNibjFjYmtCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBek5qQndlQ2tnZTF4dUlDQXVjSEp2Ylc5ZlgzUnBkR3hsSUh0Y2JpQWdJQ0JtYjI1MExYTnBlbVU2SURReWNIZzdYRzRnSUgxY2JpQWdMbkJ5YjIxdlgxOXpkV0owYVhSc1pTQjdYRzRnSUNBZ1ptOXVkQzF6YVhwbE9pQXlNSEI0TzF4dUlDQjlYRzU5WEc1QWMzVndjRzl5ZEhNZ0tDMTNaV0pyYVhRdFlYQndaV0Z5WVc1alpUcHViMjVsS1h0Y2JpNXpkMmwwWTJndGJHRnVaeTFoY25KdmR6bzZZV1owWlhKN1ltRmphMmR5YjNWdVpEcDFjbXdvWENJdUxpOXBiV2N2YUdWeWJ5OXZjR1Z1YkdGdVoyeHBjM1JwWTI5dUxuTjJaMXdpS1gxY2JpNXZjR1Z1SUM1emQybDBZMmd0YkdGdVp5MWhjbkp2ZHpvNllXWjBaWElzTG01aGRpNWhZM1JwZG1VZ0xtOXdaVzRnTG5OM2FYUmphQzFzWVc1bkxXRnljbTkzT2pwaFpuUmxjbnRpWVdOclozSnZkVzVrT25WeWJDaGNJaTR1TDJsdFp5OW9aWEp2TDJOc2IzTmxiR0Z1WjJ4cGMzUnBZMjl1TG5OMloxd2lLWDFjYmk1d2NtOXRiM3RpWVdOclozSnZkVzVrT25WeWJDaGNJaTR1TDJsdFp5OW9aWEp2TDNCeWIyMXZMV0puTG5kbFluQmNJaWtnWTJWdWRHVnlJSFJ2Y0M5amIzWmxjaUJ1YnkxeVpYQmxZWFI5WEc1OVhHNWNiaUJBYldWa2FXRWdLRzFoZUMxM2FXUjBhRG9nTVRNd01IQjRLWHRjYmx4dVFITjFjSEJ2Y25SeklDZ3RkMlZpYTJsMExXRndjR1ZoY21GdVkyVTZibTl1WlNsN1hHNWNibjFjYmx4dWZWeHVYRzRnUUcxbFpHbGhJQ2h0WVhndGQybGtkR2c2SURFeE9Ua3VPVGh3ZUNsN1hHNWNia0J6ZFhCd2IzSjBjeUFvTFhkbFltdHBkQzFoY0hCbFlYSmhibU5sT201dmJtVXBlMXh1WEc1OVhHNWNibjFjYmx4dUlFQnRaV1JwWVNBb2JXRjRMWGRwWkhSb09pQTVPVEV1T1Rod2VDbDdYRzVjYmtCemRYQndiM0owY3lBb0xYZGxZbXRwZEMxaGNIQmxZWEpoYm1ObE9tNXZibVVwZTF4dVhHNTlYRzVjYm4xY2JseHVJRUJ0WldScFlTQW9iV0Y0TFhkcFpIUm9PaUEzTmpjdU9UaHdlQ2w3WEc1Y2JrQnpkWEJ3YjNKMGN5QW9MWGRsWW10cGRDMWhjSEJsWVhKaGJtTmxPbTV2Ym1VcGUxeHVYRzU5WEc1Y2JuMWNibHh1SUVCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBMk5UQndlQ2w3WEc1Y2JrQnpkWEJ3YjNKMGN5QW9MWGRsWW10cGRDMWhjSEJsWVhKaGJtTmxPbTV2Ym1VcGUxeHVYRzU5WEc1Y2JuMWNibHh1SUVCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBMU56ZHdlQ2w3WEc1Y2JrQnpkWEJ3YjNKMGN5QW9MWGRsWW10cGRDMWhjSEJsWVhKaGJtTmxPbTV2Ym1VcGUxeHVYRzU5WEc1Y2JuMWNibHh1SUVCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBME9ETndlQ2w3WEc1Y2JrQnpkWEJ3YjNKMGN5QW9MWGRsWW10cGRDMWhjSEJsWVhKaGJtTmxPbTV2Ym1VcGUxeHVYRzU5WEc1Y2JuMWNibHh1SUVCdFpXUnBZU0FvYldGNExYZHBaSFJvT2lBek5qQndlQ2w3WEc1Y2JrQnpkWEJ3YjNKMGN5QW9MWGRsWW10cGRDMWhjSEJsWVhKaGJtTmxPbTV2Ym1VcGUxeHVYRzU5WEc1Y2JuMWNiaUlzSWlSaWJHRmpheTFqYjJ4dmNqb2dJek5CTTBFelF6dGNjbHh1SkhKbFpDMWpiMnh2Y2pvZ0l6aGtNamN5TkR0Y2NseHVKR2R5WldWdUxXTnZiRzl5T2lBak1ESTJPRE01TzF4eVhHNGtkMmhwZEdVdFkyOXNiM0k2SUNObVptWTdJbDE5ICovIiwiQGltcG9ydCBcImJhc2UvdmFyaWFibGVzXCI7XHJcblxyXG4ubmF2IHtcclxuICAmX19saW5rLFxyXG4gICZfX2J0biB7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICB9XHJcblxyXG4gICZfX2J1dHRvbi1tb2JpbGUge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICB9XHJcbn1cclxuXHJcbi5oZWFkZXJfX2hhbWJ1cmdlci1saW5lIHtcclxuICBiYWNrZ3JvdW5kOiAjZmZmICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5zd2l0Y2gtbGFuZyB7XHJcbiAgJi1hcnJvdyB7XHJcbiAgICAmOjphZnRlciB7XHJcbiAgICAgIGNvbnRlbnQ6IFwiXCI7XHJcbiAgICAgIGJhY2tncm91bmQ6IHVybChcIi4uL2ltZy9oZXJvL29wZW5sYW5nbGlzdGljb24uc3ZnXCIpO1xyXG4gICAgfVxyXG4gIH1cclxuICAub3BlbiAmLWFycm93OjphZnRlcixcclxuICAubmF2LmFjdGl2ZSAub3BlbiAmLWFycm93OjphZnRlciB7XHJcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWcvaGVyby9jbG9zZWxhbmdsaXN0aWNvbi5zdmdcIik7XHJcbiAgfVxyXG59XHJcblxyXG4ucHJvbW8ge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWcvaGVyby9wcm9tby1iZy5wbmdcIikgY2VudGVyIHRvcC9jb3ZlciBuby1yZXBlYXQ7XHJcbiAgcGFkZGluZy10b3A6IDIzMHB4O1xyXG4gIGhlaWdodDogMTAwdmg7XHJcblxyXG4gICZfX3RpdGxlIHtcclxuICAgIGZvbnQtZmFtaWx5OiBcIk1hbnJvcGVcIjtcclxuICAgIGZvbnQtd2VpZ2h0OiA4MDA7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIGZvbnQtc2l6ZTogMTAwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gIH1cclxuXHJcbiAgJl9fdGV4dCB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBmb250LXNpemU6IDMycHg7XHJcbiAgfVxyXG5cclxuICAmX19zdWJ0aXRsZSB7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICB9XHJcblxyXG4gICZfX2Fycm93IHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWFyZ2luOiAzMHB4IGF1dG8gMCBhdXRvO1xyXG4gIH1cclxufVxyXG5cclxuLnByb2Nlc3Mge1xyXG4gIHBhZGRpbmc6IDExNXB4IDAgNjBweCAwO1xyXG5cclxuICAmX19pdGVtcyB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICB9XHJcblxyXG4gICZfX3ZpZGVvIHtcclxuICAgIG1heC13aWR0aDogNDUwcHg7XHJcblxyXG4gICAgdmlkZW8ge1xyXG4gICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICBvYmplY3QtZml0OiBjb3ZlcjtcclxuICAgIH1cclxuXHJcbiAgICBpbWcge1xyXG4gICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgIG9iamVjdC1maXQ6IGNvdmVyO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJl9fdGV4dCB7XHJcbiAgICBtYXgtd2lkdGg6IDQ4MHB4O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDMwcHg7XHJcbiAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICBsaW5lLWhlaWdodDogMS42O1xyXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuXHJcbiAgICAuZ3JlZW4tdGV4dCB7XHJcbiAgICAgIGNvbG9yOiAkZ3JlZW4tY29sb3I7XHJcbiAgICAgIGZvbnQtd2VpZ2h0OiA4MDA7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4uYWJvdXQge1xyXG4gIHBhZGRpbmc6IDYwcHggMDtcclxuXHJcbiAgJl9fdGl0bGUge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgZm9udC1zaXplOiAzNnB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbiAgfVxyXG5cclxuICAmX19zdWJ0aXRsZSB7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIG1heC13aWR0aDogNTAwcHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICBsaW5lLWhlaWdodDogMS40O1xyXG4gICAgY29sb3I6ICM0NjQ2NDY7XHJcbiAgfVxyXG5cclxuICAmX19pdGVtcyB7XHJcbiAgICBtYXJnaW4tdG9wOiAxMDBweDtcclxuICB9XHJcblxyXG4gICZfX2l0ZW0ge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjAwcHg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG4gICAgZmxleC13cmFwOiB3cmFwO1xyXG5cclxuICAgICY6bnRoLWNoaWxkKDIpIHtcclxuICAgICAgZmxleC1kaXJlY3Rpb246IHJvdy1yZXZlcnNlO1xyXG4gICAgfVxyXG5cclxuICAgICY6bGFzdC1jaGlsZCB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmX190ZXh0IHtcclxuICAgIHdpZHRoOiAzNSU7XHJcbiAgICAmLXRpdGxlIHtcclxuICAgICAgZm9udC1zaXplOiAzNnB4O1xyXG4gICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgfVxyXG5cclxuICAgICYtZGVzYyB7XHJcbiAgICAgIG1hcmdpbjogMjRweCAwIDMwcHggMDtcclxuICAgICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgICBsaW5lLWhlaWdodDogMTYwJTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICZfX2xpbmsge1xyXG4gICAgY29sb3I6ICMwMDc5NDc7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBwYWRkaW5nOiA4cHggMjRweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICRncmVlbi1jb2xvcjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICB9XHJcbn1cclxuXHJcbi5nYWxsZXJ5IHtcclxuICBwYWRkaW5nOiAyMDBweCAwIDYwcHggMDtcclxuXHJcbiAgLnN3aXBlciB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuXHJcbiAgICAmLXdyYXBwZXIge1xyXG4gICAgICBoZWlnaHQ6IDQzNXB4ICFpbXBvcnRhbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgJi10b3Atc2xpZGVyIHtcclxuICAgICAgcGFkZGluZy10b3A6IDQwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgJi1ib3R0b20tc2xpZGVyIHtcclxuICAgICAgcGFkZGluZy1ib3R0b206IDIwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgJi1zbGlkZSB7XHJcbiAgICAgIGhlaWdodDogNDIwcHggIWltcG9ydGFudDtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcblxyXG4gICAgICBpbWcge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICYtc2Nyb2xsYmFyIHtcclxuICAgICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgJi1zY3JvbGxiYXItZHJhZyB7XHJcbiAgICAgIGJhY2tncm91bmQ6ICM0NjQ2NDY7XHJcbiAgICAgIGhlaWdodDogMnB4O1xyXG4gICAgfVxyXG5cclxuICAgICYtdG9wLXNjcm9sbGJhciB7XHJcbiAgICAgIHRvcDogMDtcclxuICAgICAgYm90dG9tOiAwO1xyXG4gICAgICBsZWZ0OiAwO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuQG1lZGlhIChtYXgtd2lkdGg6IDEzMDBweCkge1xyXG4gIC5nYWxsZXJ5IHtcclxuICAgIHBhZGRpbmc6IDcwcHggMCA2MHB4IDA7XHJcblxyXG4gICAgLnN3aXBlciB7XHJcbiAgICAgICYtc2xpZGUge1xyXG4gICAgICAgIGhlaWdodDogMTAwJSAhaW1wb3J0YW50O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5AbWVkaWEgKG1heC13aWR0aDogMTE5OS45OHB4KSB7XHJcbiAgLmdhbGxlcnkge1xyXG4gICAgLnN3aXBlciB7XHJcbiAgICAgICYtd3JhcHBlciB7XHJcbiAgICAgICAgaGVpZ2h0OiAzMzNweCAhaW1wb3J0YW50O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5AbWVkaWEgKG1heC13aWR0aDogOTkxLjk4cHgpIHtcclxuICAuYWJvdXQge1xyXG4gICAgJl9fdGV4dCB7XHJcbiAgICAgIHdpZHRoOiA0NSU7XHJcbiAgICAgICYtdGl0bGUge1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMzJweDtcclxuICAgICAgfVxyXG5cclxuICAgICAgJi1kZXNjIHtcclxuICAgICAgICBmb250LXNpemU6IDE3cHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgICZfX2ltZyB7XHJcbiAgICAgIHdpZHRoOiA0NSU7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAucHJvY2VzcyB7XHJcbiAgICBwYWRkaW5nOiA0MHB4IDAgNjBweCAwO1xyXG4gICAgJl9faXRlbXMge1xyXG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW4tcmV2ZXJzZTtcclxuICAgIH1cclxuXHJcbiAgICAmX192aWRlbyB7XHJcbiAgICAgIG1hcmdpbi10b3A6IDQwcHg7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBtYXgtd2lkdGg6IHVuc2V0O1xyXG5cclxuICAgICAgdmlkZW8ge1xyXG4gICAgICAgIGhlaWdodDogNDAwcHg7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9fdGV4dCB7XHJcbiAgICAgIHdpZHRoOiA4MyU7XHJcbiAgICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgICBtYXgtd2lkdGg6IHVuc2V0O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuQG1lZGlhIChtYXgtd2lkdGg6IDc2Ny45OHB4KSB7XHJcbiAgLnByb21vIHtcclxuICAgICZfX3RpdGxlIHtcclxuICAgICAgZm9udC1zaXplOiA4NnB4O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLm5hdiB7XHJcbiAgICAmX19idXR0b24ge1xyXG4gICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG5cclxuICAgICZfX2J1dHRvbi1tb2JpbGUge1xyXG4gICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgbWFyZ2luLXRvcDogMzBweDtcclxuXHJcbiAgICAgIC5uYXZfX2J0biB7XHJcbiAgICAgICAgY29sb3I6ICRibGFjay1jb2xvcjtcclxuICAgICAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5hYm91dCB7XHJcbiAgICAmX19pbWcge1xyXG4gICAgICB3aWR0aDogNDAlO1xyXG4gICAgfVxyXG5cclxuICAgICZfX3RleHQge1xyXG4gICAgICBtYXJnaW4tbGVmdDogMjVweDtcclxuICAgICAgd2lkdGg6IDUwJTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbkBtZWRpYSAobWF4LXdpZHRoOiA2NTBweCkge1xyXG4gIC5hYm91dCB7XHJcbiAgICAmX19pdGVtIHtcclxuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogODBweDtcclxuICAgIH1cclxuXHJcbiAgICAmX19pbWcge1xyXG4gICAgICB3aWR0aDogNjAlO1xyXG4gICAgfVxyXG5cclxuICAgICZfX3RleHQge1xyXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgICBtYXJnaW4tdG9wOiAzNnB4O1xyXG4gICAgICB3aWR0aDogNzUlO1xyXG5cclxuICAgICAgJi10aXRsZSB7XHJcbiAgICAgICAgZm9udC1zaXplOiAyOHB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAucHJvY2VzcyB7XHJcbiAgICAmX192aWRlbyB7XHJcbiAgICAgIHZpZGVvIHtcclxuICAgICAgICBoZWlnaHQ6IDI1MHB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5AbWVkaWEgKG1heC13aWR0aDogNTc3cHgpIHtcclxuICAubmF2IHtcclxuICAgICZfX2xpbmtzIHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAucHJvbW8ge1xyXG4gICAgJl9fdGV4dCB7XHJcbiAgICAgIHBhZGRpbmctdG9wOiA0MHB4O1xyXG4gICAgfVxyXG4gICAgJl9fdGl0bGUge1xyXG4gICAgICBmb250LXNpemU6IDY4cHg7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5AbWVkaWEgKG1heC13aWR0aDogNDgzcHgpIHtcclxuICAucHJvbW8ge1xyXG4gICAgJl9fdGl0bGUge1xyXG4gICAgICBmb250LXNpemU6IDU2cHg7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fc3VidGl0bGUge1xyXG4gICAgICBmb250LXNpemU6IDI2cHg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAucHJvY2VzcyB7XHJcbiAgICAmX192aWRlbyB7XHJcbiAgICAgIHZpZGVvIHtcclxuICAgICAgICBoZWlnaHQ6IDE4MHB4O1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5cclxuQG1lZGlhIChtYXgtd2lkdGg6IDM2MHB4KSB7XHJcbiAgLnByb21vIHtcclxuICAgICZfX3RpdGxlIHtcclxuICAgICAgZm9udC1zaXplOiA0MnB4O1xyXG4gICAgfVxyXG5cclxuICAgICZfX3N1YnRpdGxlIHtcclxuICAgICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgfVxyXG4gIH1cclxufSIsIi5uYXZfX2xpbmssIC5uYXZfX2J0biB7XG4gIGNvbG9yOiAjZmZmO1xufVxuLm5hdl9fYnV0dG9uLW1vYmlsZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi5oZWFkZXJfX2hhbWJ1cmdlci1saW5lIHtcbiAgYmFja2dyb3VuZDogI2ZmZiAhaW1wb3J0YW50O1xufVxuXG4uc3dpdGNoLWxhbmctYXJyb3c6OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1nL2hlcm8vb3BlbmxhbmdsaXN0aWNvbi5zdmdcIik7XG59XG4ub3BlbiAuc3dpdGNoLWxhbmctYXJyb3c6OmFmdGVyLCAubmF2LmFjdGl2ZSAub3BlbiAuc3dpdGNoLWxhbmctYXJyb3c6OmFmdGVyIHtcbiAgYmFja2dyb3VuZDogdXJsKFwiLi4vaW1nL2hlcm8vY2xvc2VsYW5nbGlzdGljb24uc3ZnXCIpO1xufVxuXG4ucHJvbW8ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGJhY2tncm91bmQ6IHVybChcIi4uL2ltZy9oZXJvL3Byb21vLWJnLnBuZ1wiKSBjZW50ZXIgdG9wL2NvdmVyIG5vLXJlcGVhdDtcbiAgcGFkZGluZy10b3A6IDIzMHB4O1xuICBoZWlnaHQ6IDEwMHZoO1xufVxuLnByb21vX190aXRsZSB7XG4gIGZvbnQtZmFtaWx5OiBcIk1hbnJvcGVcIjtcbiAgZm9udC13ZWlnaHQ6IDgwMDtcbiAgY29sb3I6ICNmZmY7XG4gIGZvbnQtc2l6ZTogMTAwcHg7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG4ucHJvbW9fX3RleHQge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMzJweDtcbn1cbi5wcm9tb19fc3VidGl0bGUge1xuICBjb2xvcjogI2ZmZjtcbn1cbi5wcm9tb19fYXJyb3cge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAzMHB4IGF1dG8gMCBhdXRvO1xufVxuXG4ucHJvY2VzcyB7XG4gIHBhZGRpbmc6IDExNXB4IDAgNjBweCAwO1xufVxuLnByb2Nlc3NfX2l0ZW1zIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IHN0cmV0Y2g7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xufVxuLnByb2Nlc3NfX3ZpZGVvIHtcbiAgbWF4LXdpZHRoOiA0NTBweDtcbn1cbi5wcm9jZXNzX192aWRlbyB2aWRlbyB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xufVxuLnByb2Nlc3NfX3ZpZGVvIGltZyB7XG4gIGhlaWdodDogMTAwJTtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG59XG4ucHJvY2Vzc19fdGV4dCB7XG4gIG1heC13aWR0aDogNDgwcHg7XG4gIG1hcmdpbi1sZWZ0OiAzMHB4O1xuICBmb250LXNpemU6IDE4cHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjY7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG4ucHJvY2Vzc19fdGV4dCAuZ3JlZW4tdGV4dCB7XG4gIGNvbG9yOiAjMDI2ODM5O1xuICBmb250LXdlaWdodDogODAwO1xufVxuXG4uYWJvdXQge1xuICBwYWRkaW5nOiA2MHB4IDA7XG59XG4uYWJvdXRfX3RpdGxlIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDM2cHg7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XG59XG4uYWJvdXRfX3N1YnRpdGxlIHtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIG1heC13aWR0aDogNTAwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBsaW5lLWhlaWdodDogMS40O1xuICBjb2xvcjogIzQ2NDY0Njtcbn1cbi5hYm91dF9faXRlbXMge1xuICBtYXJnaW4tdG9wOiAxMDBweDtcbn1cbi5hYm91dF9faXRlbSB7XG4gIG1hcmdpbi1ib3R0b206IDIwMHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgZmxleC13cmFwOiB3cmFwO1xufVxuLmFib3V0X19pdGVtOm50aC1jaGlsZCgyKSB7XG4gIGZsZXgtZGlyZWN0aW9uOiByb3ctcmV2ZXJzZTtcbn1cbi5hYm91dF9faXRlbTpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLWJvdHRvbTogMDtcbn1cbi5hYm91dF9fdGV4dCB7XG4gIHdpZHRoOiAzNSU7XG59XG4uYWJvdXRfX3RleHQtdGl0bGUge1xuICBmb250LXNpemU6IDM2cHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG4uYWJvdXRfX3RleHQtZGVzYyB7XG4gIG1hcmdpbjogMjRweCAwIDMwcHggMDtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBsaW5lLWhlaWdodDogMTYwJTtcbn1cbi5hYm91dF9fbGluayB7XG4gIGNvbG9yOiAjMDA3OTQ3O1xuICBmb250LXNpemU6IDE2cHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgcGFkZGluZzogOHB4IDI0cHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMwMjY4Mzk7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4uZ2FsbGVyeSB7XG4gIHBhZGRpbmc6IDIwMHB4IDAgNjBweCAwO1xufVxuLmdhbGxlcnkgLnN3aXBlciB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG59XG4uZ2FsbGVyeSAuc3dpcGVyLXdyYXBwZXIge1xuICBoZWlnaHQ6IDQzNXB4ICFpbXBvcnRhbnQ7XG59XG4uZ2FsbGVyeSAuc3dpcGVyLXRvcC1zbGlkZXIge1xuICBwYWRkaW5nLXRvcDogNDBweDtcbn1cbi5nYWxsZXJ5IC5zd2lwZXItYm90dG9tLXNsaWRlciB7XG4gIHBhZGRpbmctYm90dG9tOiAyMHB4O1xufVxuLmdhbGxlcnkgLnN3aXBlci1zbGlkZSB7XG4gIGhlaWdodDogNDIwcHggIWltcG9ydGFudDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG4uZ2FsbGVyeSAuc3dpcGVyLXNsaWRlIGltZyB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBvYmplY3QtZml0OiBjb3Zlcjtcbn1cbi5nYWxsZXJ5IC5zd2lwZXItc2Nyb2xsYmFyIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG59XG4uZ2FsbGVyeSAuc3dpcGVyLXNjcm9sbGJhci1kcmFnIHtcbiAgYmFja2dyb3VuZDogIzQ2NDY0NjtcbiAgaGVpZ2h0OiAycHg7XG59XG4uZ2FsbGVyeSAuc3dpcGVyLXRvcC1zY3JvbGxiYXIge1xuICB0b3A6IDA7XG4gIGJvdHRvbTogMDtcbiAgbGVmdDogMDtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDEzMDBweCkge1xuICAuZ2FsbGVyeSB7XG4gICAgcGFkZGluZzogNzBweCAwIDYwcHggMDtcbiAgfVxuICAuZ2FsbGVyeSAuc3dpcGVyLXNsaWRlIHtcbiAgICBoZWlnaHQ6IDEwMCUgIWltcG9ydGFudDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDExOTkuOThweCkge1xuICAuZ2FsbGVyeSAuc3dpcGVyLXdyYXBwZXIge1xuICAgIGhlaWdodDogMzMzcHggIWltcG9ydGFudDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDk5MS45OHB4KSB7XG4gIC5hYm91dF9fdGV4dCB7XG4gICAgd2lkdGg6IDQ1JTtcbiAgfVxuICAuYWJvdXRfX3RleHQtdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMzJweDtcbiAgfVxuICAuYWJvdXRfX3RleHQtZGVzYyB7XG4gICAgZm9udC1zaXplOiAxN3B4O1xuICB9XG4gIC5hYm91dF9faW1nIHtcbiAgICB3aWR0aDogNDUlO1xuICB9XG4gIC5wcm9jZXNzIHtcbiAgICBwYWRkaW5nOiA0MHB4IDAgNjBweCAwO1xuICB9XG4gIC5wcm9jZXNzX19pdGVtcyB7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW4tcmV2ZXJzZTtcbiAgfVxuICAucHJvY2Vzc19fdmlkZW8ge1xuICAgIG1hcmdpbi10b3A6IDQwcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiB1bnNldDtcbiAgfVxuICAucHJvY2Vzc19fdmlkZW8gdmlkZW8ge1xuICAgIGhlaWdodDogNDAwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICB9XG4gIC5wcm9jZXNzX190ZXh0IHtcbiAgICB3aWR0aDogODMlO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgbWF4LXdpZHRoOiB1bnNldDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDc2Ny45OHB4KSB7XG4gIC5wcm9tb19fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogODZweDtcbiAgfVxuICAubmF2X19idXR0b24ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gIH1cbiAgLm5hdl9fYnV0dG9uLW1vYmlsZSB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luLXRvcDogMzBweDtcbiAgfVxuICAubmF2X19idXR0b24tbW9iaWxlIC5uYXZfX2J0biB7XG4gICAgY29sb3I6ICMzQTNBM0M7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICB9XG4gIC5hYm91dF9faW1nIHtcbiAgICB3aWR0aDogNDAlO1xuICB9XG4gIC5hYm91dF9fdGV4dCB7XG4gICAgbWFyZ2luLWxlZnQ6IDI1cHg7XG4gICAgd2lkdGg6IDUwJTtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDY1MHB4KSB7XG4gIC5hYm91dF9faXRlbSB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBtYXJnaW4tYm90dG9tOiA4MHB4O1xuICB9XG4gIC5hYm91dF9faW1nIHtcbiAgICB3aWR0aDogNjAlO1xuICB9XG4gIC5hYm91dF9fdGV4dCB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi1sZWZ0OiAwO1xuICAgIG1hcmdpbi10b3A6IDM2cHg7XG4gICAgd2lkdGg6IDc1JTtcbiAgfVxuICAuYWJvdXRfX3RleHQtdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgfVxuICAucHJvY2Vzc19fdmlkZW8gdmlkZW8ge1xuICAgIGhlaWdodDogMjUwcHg7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA1NzdweCkge1xuICAubmF2X19saW5rcyB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgLnByb21vX190ZXh0IHtcbiAgICBwYWRkaW5nLXRvcDogNDBweDtcbiAgfVxuICAucHJvbW9fX3RpdGxlIHtcbiAgICBmb250LXNpemU6IDY4cHg7XG4gIH1cbn1cbkBtZWRpYSAobWF4LXdpZHRoOiA0ODNweCkge1xuICAucHJvbW9fX3RpdGxlIHtcbiAgICBmb250LXNpemU6IDU2cHg7XG4gIH1cbiAgLnByb21vX19zdWJ0aXRsZSB7XG4gICAgZm9udC1zaXplOiAyNnB4O1xuICB9XG4gIC5wcm9jZXNzX192aWRlbyB2aWRlbyB7XG4gICAgaGVpZ2h0OiAxODBweDtcbiAgfVxufVxuQG1lZGlhIChtYXgtd2lkdGg6IDM2MHB4KSB7XG4gIC5wcm9tb19fdGl0bGUge1xuICAgIGZvbnQtc2l6ZTogNDJweDtcbiAgfVxuICAucHJvbW9fX3N1YnRpdGxlIHtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gIH1cbn1cbkBzdXBwb3J0cyAoLXdlYmtpdC1hcHBlYXJhbmNlOm5vbmUpe1xuLnN3aXRjaC1sYW5nLWFycm93OjphZnRlcntiYWNrZ3JvdW5kOnVybChcIi4uL2ltZy9oZXJvL29wZW5sYW5nbGlzdGljb24uc3ZnXCIpfVxuLm9wZW4gLnN3aXRjaC1sYW5nLWFycm93OjphZnRlciwubmF2LmFjdGl2ZSAub3BlbiAuc3dpdGNoLWxhbmctYXJyb3c6OmFmdGVye2JhY2tncm91bmQ6dXJsKFwiLi4vaW1nL2hlcm8vY2xvc2VsYW5nbGlzdGljb24uc3ZnXCIpfVxuLnByb21ve2JhY2tncm91bmQ6dXJsKFwiLi4vaW1nL2hlcm8vcHJvbW8tYmcud2VicFwiKSBjZW50ZXIgdG9wL2NvdmVyIG5vLXJlcGVhdH1cbn1cblxuIEBtZWRpYSAobWF4LXdpZHRoOiAxMzAwcHgpe1xuXG5Ac3VwcG9ydHMgKC13ZWJraXQtYXBwZWFyYW5jZTpub25lKXtcblxufVxuXG59XG5cbiBAbWVkaWEgKG1heC13aWR0aDogMTE5OS45OHB4KXtcblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSl7XG5cbn1cblxufVxuXG4gQG1lZGlhIChtYXgtd2lkdGg6IDk5MS45OHB4KXtcblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSl7XG5cbn1cblxufVxuXG4gQG1lZGlhIChtYXgtd2lkdGg6IDc2Ny45OHB4KXtcblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSl7XG5cbn1cblxufVxuXG4gQG1lZGlhIChtYXgtd2lkdGg6IDY1MHB4KXtcblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSl7XG5cbn1cblxufVxuXG4gQG1lZGlhIChtYXgtd2lkdGg6IDU3N3B4KXtcblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSl7XG5cbn1cblxufVxuXG4gQG1lZGlhIChtYXgtd2lkdGg6IDQ4M3B4KXtcblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSl7XG5cbn1cblxufVxuXG4gQG1lZGlhIChtYXgtd2lkdGg6IDM2MHB4KXtcblxuQHN1cHBvcnRzICgtd2Via2l0LWFwcGVhcmFuY2U6bm9uZSl7XG5cbn1cblxufVxuIl19 */