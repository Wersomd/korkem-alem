.team{padding-bottom:140px;text-align:center}.team__swiper{margin-top:60px}.team .swiper-slide{height:336px!important}.team__item img{height:100%}.team__cta{padding-top:120px}.team__cta__wrapper{background:#026839}.team__cta__container{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:60px 0}.team__cta__right-block{max-width:650px}.team__cta__text{color:#fff;font-size:20px;font-weight:500;line-height:1.4}.team__cta__btn{display:inline-block;margin-top:20px;color:#fff;padding:6px 24px;border:2px solid #fff;border-radius:5px}.team__cta__left-block{position:relative}.team__cta__img{position:absolute;top:-250px;right:0;width:500px;height:365px}.team__cta__img-img{height:100%;-o-object-fit:cover;object-fit:cover}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */